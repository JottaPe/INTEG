(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@totvs/thf-core/services/thf-notification-base/thf-toaster-base/thf-toaster-base.component'), require('@totvs/thf-core/services/thf-notification-base/thf-toaster-base/thf-toaster-type.enum'), require('@totvs/thf-core/services/thf-notification-base/thf-toaster-base/thf-toaster-orientation.enum'), require('@angular/common')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@totvs/thf-core/services/thf-notification-base/thf-toaster-base/thf-toaster-base.component', '@totvs/thf-core/services/thf-notification-base/thf-toaster-base/thf-toaster-type.enum', '@totvs/thf-core/services/thf-notification-base/thf-toaster-base/thf-toaster-orientation.enum', '@angular/common'], factory) :
	(factory((global['thf-notification'] = {}),global.core,global.thfToasterBase_component,global.thfToasterType_enum,global.thfToasterOrientation_enum,global.common));
}(this, (function (exports,core,thfToasterBase_component,thfToasterType_enum,thfToasterOrientation_enum,common) { 'use strict';

var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * \@docsPrivate
 *
 */
var ThfToasterComponent = (function (_super) {
    __extends(ThfToasterComponent, _super);
    /**
     * @param {?=} elementeRef
     */
    function ThfToasterComponent(elementeRef) {
        var _this = _super.call(this) || this;
        _this.elementeRef = elementeRef;
        _this.margin = 20;
        _this.showToaster = true;
        return _this;
    }
    /**
     * @param {?} position
     * @return {?}
     */
    ThfToasterComponent.prototype.changePosition = function (position) {
        this.elementeRef.nativeElement.style.display = 'table';
        this.margin = 6 + (44 * (position)) + position * 6;
        if (this.orientation === thfToasterOrientation_enum.ThfToasterOrientation.Bottom) {
            this.toaster.nativeElement.style.bottom = this.margin + 'px';
        }
        else {
            this.toaster.nativeElement.style.top = this.margin + 'px';
        }
    };
    /**
     * @return {?}
     */
    ThfToasterComponent.prototype.close = function () {
        this.showToaster = false;
    };
    /**
     * @param {?} thfToaster
     * @return {?}
     */
    ThfToasterComponent.prototype.configToaster = function (thfToaster) {
        this.type = thfToaster.type;
        this.message = thfToaster.message;
        this.orientation = thfToaster.orientation;
        this.position = thfToaster.position;
        this.action = thfToaster.action;
        this.actionLabel = (thfToaster.actionLabel) ? thfToaster.actionLabel : 'Fechar';
        this.componentRef = thfToaster.componentRef;
        /* Muda a orientação do Toaster */
        if (this.orientation === thfToasterOrientation_enum.ThfToasterOrientation.Bottom) {
            this.toasterPosition = 'thf-toaster-bottom';
        }
        /* Muda a posição do Toaster */
        this.changePosition(this.position);
        /* Switch para o tipo de Toaster */
        switch (this.type) {
            case thfToasterType_enum.ThfToasterType.Error: {
                this.toasterType = 'thf-toaster-error';
                this.icon = 'thf-icon-close';
                break;
            }
            case thfToasterType_enum.ThfToasterType.Information: {
                this.toasterType = 'thf-toaster-info';
                this.icon = 'thf-icon-info';
                break;
            }
            case thfToasterType_enum.ThfToasterType.Success: {
                this.toasterType = 'thf-toaster-success';
                this.icon = 'thf-icon-ok';
                break;
            }
            case thfToasterType_enum.ThfToasterType.Warning: {
                this.toasterType = 'thf-toaster-warning';
                this.icon = 'thf-icon-warning';
                break;
            }
        }
    };
    /**
     * @return {?}
     */
    ThfToasterComponent.prototype.thfToasterAction = function () {
        this.action(this);
    };
    /**
     * @return {?}
     */
    ThfToasterComponent.prototype.getShowToaster = function () {
        return this.showToaster;
    };
    ThfToasterComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thf-toaster', template: "<div #toaster *ngIf=\"getShowToaster()\" class=\"thf-toaster {{ toasterType }} {{ toasterPosition }}\"> <div class=\"thf-toaster-message\"> <span class=\"thf-icon {{ icon }}\"></span> {{ message }} </div> <div *ngIf=\"action !== undefined\" (click)=\"thfToasterAction()\" class=\"thf-toaster-action\"> {{ actionLabel }} </div> </div> "
                },] },
    ];
    /**
     * @nocollapse
     */
    ThfToasterComponent.ctorParameters = function () { return [
        { type: core.ElementRef, },
    ]; };
    ThfToasterComponent.propDecorators = {
        'toaster': [{ type: core.ViewChild, args: ['toaster',] },],
    };
    return ThfToasterComponent;
}(thfToasterBase_component.ThfToasterBaseComponent));

var ThfNotificationModule = (function () {
    function ThfNotificationModule() {
    }
    ThfNotificationModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [
                        ThfToasterComponent
                    ],
                    imports: [
                        common.CommonModule
                    ],
                    exports: [],
                    entryComponents: [
                        ThfToasterComponent
                    ],
                    providers: [],
                    bootstrap: []
                },] },
    ];
    /**
     * @nocollapse
     */
    ThfNotificationModule.ctorParameters = function () { return []; };
    return ThfNotificationModule;
}());

exports.ThfNotificationModule = ThfNotificationModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));
