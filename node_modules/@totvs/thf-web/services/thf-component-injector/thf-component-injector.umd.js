(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :
	(factory((global['thf-component-injector'] = {}),global.core));
}(this, (function (exports,core) { 'use strict';

var ThfComponentInjectorService = (function () {
    /**
     * @param {?} componentResolver
     * @param {?} applicationRef
     * @param {?} injector
     */
    function ThfComponentInjectorService(componentResolver, applicationRef, injector) {
        this.componentResolver = componentResolver;
        this.applicationRef = applicationRef;
        this.injector = injector;
    }
    /**
     * @param {?} component
     * @return {?}
     */
    ThfComponentInjectorService.prototype.createComponentInApplication = function (component) {
        var /** @type {?} */ componentRef = this.componentResolver.resolveComponentFactory(component).create(this.injector);
        this.applicationRef.attachView(componentRef.hostView);
        var /** @type {?} */ domElem = (((componentRef.hostView)).rootNodes[0]);
        document.body.appendChild(domElem);
        return componentRef;
    };
    /**
     * @param {?} componentRef
     * @return {?}
     */
    ThfComponentInjectorService.prototype.destroyComponentInApplication = function (componentRef) {
        this.applicationRef.detachView(componentRef.hostView);
        componentRef.destroy();
    };
    ThfComponentInjectorService.decorators = [
        { type: core.Injectable },
    ];
    /**
     * @nocollapse
     */
    ThfComponentInjectorService.ctorParameters = function () { return [
        { type: core.ComponentFactoryResolver, },
        { type: core.ApplicationRef, },
        { type: core.Injector, },
    ]; };
    return ThfComponentInjectorService;
}());

var ThfComponentInjectorModule = (function () {
    function ThfComponentInjectorModule() {
    }
    ThfComponentInjectorModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [],
                    imports: [],
                    exports: [],
                    providers: [
                        ThfComponentInjectorService
                    ],
                    bootstrap: []
                },] },
    ];
    /**
     * @nocollapse
     */
    ThfComponentInjectorModule.ctorParameters = function () { return []; };
    return ThfComponentInjectorModule;
}());

exports.ThfComponentInjectorModule = ThfComponentInjectorModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));
