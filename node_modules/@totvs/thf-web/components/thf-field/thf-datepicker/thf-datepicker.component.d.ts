import { AfterViewInit, ElementRef, OnDestroy, Renderer } from '@angular/core';
import { NgControl } from '@angular/forms';
import { ThfDatepickerBaseComponent } from '@totvs/thf-core/components/thf-field-base';
import { ThfCalendarComponent } from '../../thf-calendar/thf-calendar.component';
/**
 * @extends ThfDatepickerBaseComponent
 *
 * @example
 * <example name='thf-datepicker' title='Totvs Datepicker'>
 *  <file name='sample-thf-datepicker.component.html'> </file>
 *  <file name='sample-thf-datepicker.component.ts'> </file>
 * </example>
 */
export declare class ThfDatepickerComponent extends ThfDatepickerBaseComponent implements AfterViewInit, OnDestroy {
    picker: ThfCalendarComponent;
    dialogPicker: ElementRef;
    iconDatepicker: ElementRef;
    inputEl: ElementRef;
    cleanEl: ElementRef;
    /** Label do campo. */
    label: string;
    /** Texto de apoio do campo. */
    help?: string;
    validators: any[];
    date: Date;
    hour: string;
    el: ElementRef;
    private clickListener;
    constructor(renderer: Renderer, el: ElementRef, ngControl?: NgControl);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    togglePicker(): void;
    dateSelected(): void;
    wasClickedOnPicker(event: MouseEvent): void;
    onKeyup($event: any): void;
    onKeypress($event: any): void;
    onKeydown($event?: any): void;
    hasInvalidClass(): boolean;
    cleanInput(): void;
    eventOnBlur($event: any): void;
    eventOnChange($event: any): void;
    eventOnClick($event: any): void;
    formatToDate(value: Date): string;
    writeValue(value: any): void;
    hasOverlayClass(element: any): any;
}
