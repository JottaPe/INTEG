var __extends=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])};return function(e,i){t(e,i);function o(){this.constructor=e}e.prototype=null===i?Object.create(i):(o.prototype=i.prototype,new o)}}();import{Component}from"@angular/core";import{ThfSwitchBaseComponent,ThfSwitchLabelPosition}from"@totvs/thf-core/components/thf-field-base";var ThfSwitchComponent=function(t){__extends(e,t);function e(){return null!==t&&t.apply(this,arguments)||this}return e.prototype.getLabelPosition=function(){switch(this.labelPosition){case ThfSwitchLabelPosition.Left:return"left";case ThfSwitchLabelPosition.Right:default:return"right"}},e.prototype.getSwitchPosition=function(){switch(this.labelPosition){case ThfSwitchLabelPosition.Left:return"right";case ThfSwitchLabelPosition.Right:default:return"left"}},e.decorators=[{type:Component,args:[{selector:"thf-switch",template:'<thf-field-container [t-label]="label" [t-help]="help" [t-opcional]="!required"> <div [attr.name]="name" class="thf-switch"> <div class="thf-switch-container thf-clickable" [class.thf-switch-container-right]="getSwitchPosition() === \'right\'" [class.thf-switch-container-on]="switchValue === true && !disabled" [class.thf-switch-container-off]="switchValue === false && !disabled" [class.thf-switch-container-disabled]="disabled" (click)="eventClick()"> <div class="thf-switch-button" [class.thf-switch-button-on]="switchValue === true" [class.thf-switch-button-off]="switchValue === false" [class.thf-switch-button-disabled]="disabled"> <span class="thf-icon thf-icon-{{ switchValue === true ? \'ok\' : \'close\' }}"></span> </div> </div> <span class="thf-switch-label thf-clickable thf-switch-label-{{ getLabelPosition() }}" (click)="eventClick()"> {{ switchValue === true ? labelOn : labelOff }} </span> </div> </thf-field-container> '}]}],e.ctorParameters=function(){return[]},e}(ThfSwitchBaseComponent);export{ThfSwitchComponent};function ThfSwitchComponent_tsickle_Closure_declarations(){ThfSwitchComponent.decorators,ThfSwitchComponent.ctorParameters}