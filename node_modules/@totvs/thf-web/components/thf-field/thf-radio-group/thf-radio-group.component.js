var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';
import { ThfRadioGroupBaseComponent } from '@totvs/thf-core/components/thf-field-base';
/**
 *
 * \@example
 *  <example name='thf-radio-group'>
 *  <file name='sample-thf-radio-group.component.html'>
 *  <form #f="ngForm">
 *    <thf-radio-group
 *      name="genderName"
 *      t-required
 *      t-label="Gênero"
 *      [t-options]="genderOptions"
 *      (t-change)="changeGender($event)"
 *      [(ngModel)]="gender">
 *    </thf-radio-group>
 *
 *    <thf-radio-group
 *      name="interestName"
 *      t-required
 *      t-label="Área de interesse"
 *      t-help="Apenas um interesse poderá ser selecionado"
 *      [t-options]="interestOptions"
 *      [(ngModel)]="interest">
 *    </thf-radio-group>
 *
 *    <thf-button
 *      t-label='Enviar'
 *      [t-disabled]='!f.form.valid'>
 *    </thf-button>
 *  </form>
 *  </file>
 *  <file name='sample-thf-radio-group.component.ts'>
 * import { Component } from '\@angular/core';
 * import { ThfRadioGroupOption } from '\@totvs/thf-core/components/thf-field-base/thf-radio-group-base/thf-radio-group.interface';
 *
 * \@Component({
 *   selector: 'sample-thf-radio-group',
 *   templateUrl: './sample-thf-radio-group.component.html'
 * })
 * export class SampleThfRadioGroupComponent {
 *
 *   gender = '';
 *
 *   genderOptions: Array<ThfRadioGroupOption> = [
 *     { label: 'Masculino', value: 'male' },
 *     { label: 'Feminino', value: 'female' }
 *   ];
 *
 *   interest = 'arts';
 *
 *   interestOptions: Array<ThfRadioGroupOption> = [
 *     { label: 'Livros', value: 'books' },
 *     { label: 'Filmes', value: 'movies' },
 *     { label: 'Músicas', value: 'music' },
 *     { label: 'Artes', value: 'arts' },
 *     { label: 'Esportes', value: 'sports', disabled: true }
 *   ];
 *
 *   changeGender(value) {
 *     console.log('O gênero foi alterado: ', value);
 *   }
 *
 *   constructor() { }
 * }
 *
 *  </file>
 * </example>
 */
var ThfRadioGroupComponent = (function (_super) {
    __extends(ThfRadioGroupComponent, _super);
    function ThfRadioGroupComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ThfRadioGroupComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-radio-group', template: "<thf-field-container [t-label]=\"label\" [t-help]=\"help\" [t-opcional]=\"!required\"> <div class=\"thf-input-radio-container\" #inp> <div *ngFor=\"let option of options\" class=\"thf-input-radio-outline\"> <input class=\"thf-input-radio\" type=\"radio\" (keyup)=\"keyup()\" [attr.name]=\"name\" [required]=\"required\" [disabled]=\"option.disabled === true || disabled\" [readonly]=\"readonly\" [value]=\"option.value\" [checked]=\"selectCheckedValue === option.value\"> <label [for]=\"name\" class=\"thf-input-radio-label\" (click)=\"eventClick(option.value, option.disabled === true || disabled)\">{{option.label}} </label> </div> </div> </thf-field-container> ", styles: [".thf-input-radio { -webkit-appearance: none; -moz-appearance: none; position: absolute; width: 0px; height: 0px; margin: 0; outline: none; border: 1px solid transparent; background-color: transparent; } .thf-input-radio-label { height: 16px; font-family: NunitoSans; font-size: 16px; line-height: 1.5; text-align: left; color: #1e2526; margin: 0 6px 6px 6px; cursor: pointer; } .thf-input-radio + .thf-input-radio-label:before { width: 18px; height: 18px; margin-top: -2px; margin-right: 8px; display: inline-block; vertical-align: middle; background-color: #ffffff; box-shadow: inset 0px 2px 8px 0 #edefef; border: solid 1px #b7bebf; border-radius: 50%; content: ' '; } .thf-input-radio:checked + .thf-input-radio-label:before { background-color: #0c9abe; border: 1px solid #0c9abe; box-shadow: none; color: white; font-family: 'TotvsIcon' !important; line-height: 18px; content: '\e937'; font-weight: bold; padding-left: 1px; width: 17px; } .thf-input-radio:focus + .thf-input-radio-label:before { border: solid 1px #0c9abe !important; } .thf-input-radio:disabled + .thf-input-radio-label:before { background-color: #edefef; border: solid 1px #b7bebf; } .thf-input-radio:checked:disabled + .thf-input-radio-label:before { color: #b7bebf; width: 17px; } .thf-input-radio-container { padding-top: 10px; display: block; } .thf-input-radio-outline { padding-bottom: 20px; } "],
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush
                },] },
    ];
    /**
     * @nocollapse
     */
    ThfRadioGroupComponent.ctorParameters = function () { return []; };
    ThfRadioGroupComponent.propDecorators = {
        'label': [{ type: Input, args: ['t-label',] },],
        'help': [{ type: Input, args: ['t-help',] },],
    };
    return ThfRadioGroupComponent;
}(ThfRadioGroupBaseComponent));
export { ThfRadioGroupComponent };
function ThfRadioGroupComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    ThfRadioGroupComponent.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ThfRadioGroupComponent.ctorParameters;
    /** @type {?} */
    ThfRadioGroupComponent.propDecorators;
    /**
     * Label do campo
     * @type {?}
     */
    ThfRadioGroupComponent.prototype.label;
    /**
     * Texto de apoio do campo
     * @type {?}
     */
    ThfRadioGroupComponent.prototype.help;
}
