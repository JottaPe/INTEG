import { OnInit } from '@angular/core';
import { ThfInputBaseComponent } from '@totvs/thf-core/components/thf-field-base';
/**
 *
 * @extends ThfInputBaseComponent
 *
 * @description
 * thf-number é um input específico para receber apenas números.
 * É possível configurar um valor mínimo, máximo e um step com t-min, t-max e t-step,
 * respectivamente.
 *
 * @example
 *  <example name='thf-number'>
 *  <file name='sample-thf-number.component.html'>
 *  <form #f="ngForm">
 *    <thf-number
 *    t-label="Idade"
 *    t-help="Você precisa ser maior de idade"
 *    t-placeholder="Informe sua idade"
 *    name="idade"
 *    [(ngModel)]="idade"
 *    t-min="18"
 *    t-required
 *    t-focus
 *    t-clean>
 *    </thf-number>
 *  </form>
 *  </file>
 *  <file name='sample-thf-number.component.ts'>
 *   import { Component } from '@angular/core';
 *   import { ThfModule } from '@totvs/thf-web';
 *
 *   @Component({
 *      selector: 'sample-thf-number',
 *     templateUrl: './sample-thf-number.component.html'
 *   })
 *   export class SampleThfNumberComponent {
 *
 *     idade = 40;
 *
 *     constructor() { }
 *   }
 *  </file>
 * </example>
 */
export declare class ThfNumberComponent extends ThfInputBaseComponent implements OnInit {
    type: string;
    /** Label do campo */
    label?: string;
    /** Texto de apoio para o campo */
    help?: string;
    /** Valor mínimo */
    min?: number;
    setMin: string;
    /** Valor máximo */
    max?: number;
    setMax: string;
    /** Intervalo */
    step: string;
    ngOnInit(): void;
    getValidatorMin(): any;
    getValidatorMax(): any;
}
