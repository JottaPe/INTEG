import { AfterViewInit, ChangeDetectorRef, ElementRef, Renderer } from '@angular/core';
import { NgControl } from '@angular/forms';
import { ThfSelectBaseComponent, ThfSelectOption } from '@totvs/thf-core/components/thf-field-base';
/**
* @extends ThfSelectBaseComponent
*
* @example
*
* <example name="thf-select-labs" title="Totvs Select Labs">
*   <file name="sample-thf-select-labs.component.html"> </file>
*   <file name="sample-thf-select-labs.component.ts"> </file>
* </example>
*
* <example name="thf-select" title="Totvs Select dinÃ¢micos">
*   <file name="sample-thf-select.component.html"> </file>
*   <file name="sample-thf-select.component.ts"> </file>
* </example>
*/
export declare class ThfSelectComponent extends ThfSelectBaseComponent implements AfterViewInit {
    selectElement: ElementRef;
    iconElement: ElementRef;
    selectButtonElement: ElementRef;
    selectedValue: any;
    open: boolean;
    selectIcon: string;
    oldValue: number;
    displayValue: any;
    isNative: boolean;
    constructor(element: ElementRef, changeDetector: ChangeDetectorRef, renderer: Renderer, ngControl?: NgControl);
    onKeydown($event?: any): void;
    ngAfterViewInit(): void;
    toggleButton(): void;
    onSelectChange(value: any): void;
    onOptionClick(option: ThfSelectOption): void;
    writeValue(value: any): void;
    updateModel(option: ThfSelectOption): void;
    callModelChange(value: any): any;
    scrollTo(index: any): void;
    selector(query: string): Element;
    hideDropDown(): void;
    wasClickedOnToggle(event: MouseEvent): void;
    isEqual(value: any, inputValue: any): boolean;
}
