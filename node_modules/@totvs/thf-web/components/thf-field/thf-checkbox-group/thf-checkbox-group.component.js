var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';
import { ThfCheckboxGroupBaseComponent } from '@totvs/thf-core/components/thf-field-base';
/**
 *
 * \@example
 * <example name='thf-checkbox-group'>
 * <file name='sample-thf-checkbox-group.component.html'>
 *  <form #f="ngForm">
 *    <thf-checkbox-group
 *      name="checkboxDiasUteis"
 *      t-label="THF-CHECKBOX"
 *      t-help="thf-checkbox"
 *      t-required="true"
 *      [t-options]="diasSemana"
 *      (t-change)="change($event)"
 *      [(ngModel)]="modelDiasSemana">
 *    </thf-checkbox-group>
 *  </form>
 *  <br>
 *  <thf-button
 *    t-label="Checar dias úteis"
 *    (t-click)="modelDiasSemana = ['segunda', 'terca', 'quarta', 'quinta', 'sexta']">
 *  </thf-button>
 *  <thf-button
 *    t-label="Checar dias corridos"
 *    (t-click)="modelDiasSemana = ['domingo','segunda', 'terca', 'quarta', 'quinta', 'sexta', 'sabado']">
 *  </thf-button>
 *  <br>
 *  <pre>{{ modelDiasSemana | json }}</pre>
 * </file>
 * <file name='sample-thf-checkbox-group.component.ts'>
 *  import { Component, ViewChild } from '\@angular/core';
 *  import { ThfModule } from '\@totvs/thf-web';
 *  import { ThfCheckboxGroupOption } from '\@totvs/thf-core/components/thf-field-base/thf-checkbox-group-base/thf-checkbox-group.interface';
 *
 *  \@Component({
 *    selector: 'sample-thf-checkbox-group',
 *    templateUrl: './sample-thf-checkbox-group.component.html'
 *  })
 *
 *  export class SampleThfCheckboxGroupComponent {
 *    diasSemana: Array<ThfCheckboxGroupOption>;
 *    modelDiasSemana: Array<any>;
 *
 *    constructor() {
 *      this.diasSemana = [
 *        {
 *          value: 'domingo',
 *          label: 'Domingo'
 *        },
 *        {
 *          value: 'segunda',
 *          label: 'Segunda-feira'
 *        },
 *        {
 *          value: 'terca',
 *          label: 'Terça-feira',
 *        },
 *        {
 *          value: 'quarta',
 *          label: 'Quarta-feira',
 *          disabled: true
 *        },
 *        {
 *          value: 'quinta',
 *          label: 'Quinta-feira',
 *        },
 *        {
 *          value: 'sexta',
 *          label: 'Sexta-feira',
 *        },
 *        {
 *          value: 'sabado',
 *          label: 'Sábado'
 *        }
 *      ];
 *      this.modelDiasSemana = ['terca', 'quinta', 'sexta'];
 *    }
 *
 *    change(value) {
 *      console.log('Chamado evento de change', value);
 *    }
 *  }
 * </file>
 * </example>
 */
var ThfCheckboxGroupComponent = (function (_super) {
    __extends(ThfCheckboxGroupComponent, _super);
    function ThfCheckboxGroupComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ThfCheckboxGroupComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-checkbox-group', template: "<thf-field-container [t-label]=\"label\" [t-help]=\"help\" [t-opcional]=\"!required\"> <div class=\"thf-checkbox-container\" #inp> <div class=\"thf-input-checkbox-inline\" *ngFor=\"let option of options\"> <input class=\"thf-input-checkbox\" type=\"checkbox\" [attr.name]=\"name + option.value\" [attr.id]=\"name + option.value\" [required]=\"required\" [disabled]=\"option.disabled === true\" [value]=\"option.value\" (click)=\"eventClick(name, option.value)\"> <label for=\"{{name + option.value}}\">{{option.label}}</label> </div> </div> </thf-field-container> ", styles: [".thf-input-checkbox-inline { display: inline-block; } .thf-input-checkbox { width: 20px; height: 20px; border-radius: 2px; box-shadow: inset 0 1px 8px 0 rgba(0, 0, 0, 0.1); border: solid 1px rgba(255, 255, 255, 0.6); } .thf-input-checkbox:checked { width: 20px; height: 20px; border-radius: 2px; } input[type=checkbox] { visibility: hidden; position: absolute; } input[type=checkbox] + label:before { width: 20px; height: 20px; margin-top: -2px; margin-right: 8px; display: inline-block; vertical-align: middle; background-color: #ffffff; box-shadow: inset 0px 2px 8px 0 #edefef; border: solid 1px #b7bebf; content: ' '; } input[type=checkbox]:checked + label:before { background-color: #0c9abe; box-shadow: none; color: white; font-family: 'TotvsIcon' !important; line-height: 18px; content: ' '; padding-left: 1px; } input[type=checkbox]:disabled + label:before { background-color: #edefef; border: solid 1px #b7bebf; } input[type=checkbox]:checked:disabled + label:before { color: #b7bebf; } input[type=checkbox] + label:before { border-radius: 2px; } label { height: 16px; font-family: NunitoSans; font-size: 16px; line-height: 1.5; text-align: left; color: #1e2526; margin: 0 6px 6px 6px; cursor: pointer; } "],
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush
                },] },
    ];
    /**
     * @nocollapse
     */
    ThfCheckboxGroupComponent.ctorParameters = function () { return []; };
    ThfCheckboxGroupComponent.propDecorators = {
        'label': [{ type: Input, args: ['t-label',] },],
        'help': [{ type: Input, args: ['t-help',] },],
    };
    return ThfCheckboxGroupComponent;
}(ThfCheckboxGroupBaseComponent));
export { ThfCheckboxGroupComponent };
function ThfCheckboxGroupComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    ThfCheckboxGroupComponent.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ThfCheckboxGroupComponent.ctorParameters;
    /** @type {?} */
    ThfCheckboxGroupComponent.propDecorators;
    /**
     * Label do campo
     * @type {?}
     */
    ThfCheckboxGroupComponent.prototype.label;
    /**
     * Texto de apoio do campo
     * @type {?}
     */
    ThfCheckboxGroupComponent.prototype.help;
}
