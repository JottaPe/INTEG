var __extends=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var t in o)o.hasOwnProperty(t)&&(e[t]=o[t])};return function(o,t){e(o,t);function n(){this.constructor=o}o.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}}();import{Component,ViewEncapsulation,ChangeDetectionStrategy,Input}from"@angular/core";import{ThfCheckboxGroupBaseComponent}from"@totvs/thf-core/components/thf-field-base";var ThfCheckboxGroupComponent=function(e){__extends(o,e);function o(){return null!==e&&e.apply(this,arguments)||this}return o.decorators=[{type:Component,args:[{selector:"thf-checkbox-group",template:'<thf-field-container [t-label]="label" [t-help]="help" [t-opcional]="!required"> <div class="thf-checkbox-container" #inp> <div class="thf-input-checkbox-inline" *ngFor="let option of options"> <input class="thf-input-checkbox" type="checkbox" [attr.name]="name + option.value" [attr.id]="name + option.value" [required]="required" [disabled]="option.disabled === true" [value]="option.value" (click)="eventClick(name, option.value)"> <label for="{{name + option.value}}">{{option.label}}</label> </div> </div> </thf-field-container> ',styles:[".thf-input-checkbox-inline { display: inline-block; } .thf-input-checkbox { width: 20px; height: 20px; border-radius: 2px; box-shadow: inset 0 1px 8px 0 rgba(0, 0, 0, 0.1); border: solid 1px rgba(255, 255, 255, 0.6); } .thf-input-checkbox:checked { width: 20px; height: 20px; border-radius: 2px; } input[type=checkbox] { visibility: hidden; position: absolute; } input[type=checkbox] + label:before { width: 20px; height: 20px; margin-top: -2px; margin-right: 8px; display: inline-block; vertical-align: middle; background-color: #ffffff; box-shadow: inset 0px 2px 8px 0 #edefef; border: solid 1px #b7bebf; content: ' '; } input[type=checkbox]:checked + label:before { background-color: #0c9abe; box-shadow: none; color: white; font-family: 'TotvsIcon' !important; line-height: 18px; content: ' '; padding-left: 1px; } input[type=checkbox]:disabled + label:before { background-color: #edefef; border: solid 1px #b7bebf; } input[type=checkbox]:checked:disabled + label:before { color: #b7bebf; } input[type=checkbox] + label:before { border-radius: 2px; } label { height: 16px; font-family: NunitoSans; font-size: 16px; line-height: 1.5; text-align: left; color: #1e2526; margin: 0 6px 6px 6px; cursor: pointer; } "],encapsulation:ViewEncapsulation.None,changeDetection:ChangeDetectionStrategy.OnPush}]}],o.ctorParameters=function(){return[]},o.propDecorators={label:[{type:Input,args:["t-label"]}],help:[{type:Input,args:["t-help"]}]},o}(ThfCheckboxGroupBaseComponent);export{ThfCheckboxGroupComponent};function ThfCheckboxGroupComponent_tsickle_Closure_declarations(){ThfCheckboxGroupComponent.decorators,ThfCheckboxGroupComponent.ctorParameters,ThfCheckboxGroupComponent.propDecorators,ThfCheckboxGroupComponent.prototype.label,ThfCheckboxGroupComponent.prototype.help}