import { ComponentFactoryResolver, AfterContentInit, QueryList, AfterViewChecked } from '@angular/core';
import { ThfTabsBaseComponent } from '@totvs/thf-core/components/thf-tabs-base';
import { ThfTabComponent } from './thf-tab/thf-tab.component';
/**
 * @extends ThfTabsBaseComponent
 *
 * @example
 *  <example name='thf-tabs'>
 *  <file name='sample-thf-tabs.component.html'>
 *
 *    <thf-tabs>
 *      <thf-tab t-label="Aba 1">
 *        <h1>Conteúdo da aba 1</h1>
 *      </thf-tab>
 *      <thf-tab t-label="Aba 2" (t-click)="metodo()">
 *        <h1>Conteúdo da aba 2</h1>
 *      </thf-tab>
 *      <thf-tab t-label="Aba 3" t-active>
 *        <h1>Conteúdo da aba 3</h1>
 *      </thf-tab>
 *    </thf-tabs>
 *
 *    <thf-tabs t-small>
 *      <thf-tab t-label="Aba 1" t-active>
 *        <h1>Conteúdo da aba 1</h1>
 *      </thf-tab>
 *      <thf-tab t-label="Aba 2" [t-hide]="hide">
 *        <h1>Conteúdo da aba 2</h1>
 *      </thf-tab>
 *      <thf-tab t-label="Aba 3" t-disabled>
 *        <h1>Conteúdo da aba 3</h1>
 *      </thf-tab>
 *      <thf-tab t-label="Aba 4">
 *        <h1>Conteúdo da aba 4</h1>
 *      </thf-tab>
 *    </thf-tabs>
 *
 *    <thf-button (click)="hide=!hide" [t-label]="'hide: '+hide"></thf-button>
 *
 *  </file>
 *  <file name='sample-thf-tabs.component.ts'>
 *   import { Component, AfterViewChecked } from '@angular/core';
 *   import { ThfModule } from '@totvs/thf-web';
 *
 *   @Component({
 *     selector: 'sample-thf-tabs',
 *     templateUrl: './sample-thf-tabs.component.html',
 *   })
 *   export class SampleThfTabsComponent {
 *
 *     hide: boolean = false;
 *
 *     metodo() {
 *       console.log('Disparado método ao clicar na aba');
 *     }
 *
 *   }
 *  </file>
 * </example>
 */
export declare class ThfTabsComponent extends ThfTabsBaseComponent implements AfterContentInit, AfterViewChecked {
    private resolver;
    tabsChild: QueryList<ThfTabComponent>;
    nav: any;
    listButtons: any[];
    created: boolean;
    constructor(resolver: ComponentFactoryResolver);
    ngAfterContentInit(): void;
    ngAfterViewChecked(): void;
    selectedTab(id: any): void;
    countVisibledTabs(): number;
    calculateWidth(visibledTabs: any): number;
}
