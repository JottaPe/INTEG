(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@totvs/thf-core/components/thf-button-base')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', '@totvs/thf-core/components/thf-button-base'], factory) :
	(factory((global['thf-list'] = {}),global.core,global.common,global.thfButtonBase));
}(this, (function (exports,core,common,thfButtonBase) { 'use strict';

/**
 * \@description
 *
 * Componente de lista que recebe um array de objetos e renderiza de forma dinâmica os dados de
 * acordo com a necessidade de cada tela. O componente disponibiliza uma área de exibição específica
 * para exibição de mais informações através do link "Exibir Detalhes".
 * Este componente é utilizado em conjunto com os componentes thf-list-item, thf-list-item-content e
 * thf-list-item-detail.
 *
 * \@example
 * <example name='thf-list'>
 * <file name='sample-thf-list.component.html'>
 *   <thf-list>
 *      <thf-list-item *ngFor="let item of data2; let i = index"
 *            [t-title]="item.name">
 *      </thf-list-item>
 *    </thf-list>
 *    <hr/>
 *    <thf-list>
 *      <thf-list-item *ngFor="let item of data2; let i = index"
 *            [t-title]="item.name">
 *            <thf-list-item-content>
 *                {{item.name}}
 *            </thf-list-item-content>
 *      </thf-list-item>
 *    </thf-list>
 *    <hr/>
 *    <thf-list (t-show-more)="showMoreFunction()" [t-show-more-disabled]="showMoreDisabled">
 *        <thf-list-item *ngFor="let item of data; let i = index"
 *          [t-title]="item.title"
 *          [t-index]="i"
 *          [t-actions]="eventsObject">
 *          <thf-list-item-content style="display:flex">
 *            <thf-info t-label="Cadastro" [t-value]="item.register"></thf-info>
 *            <thf-info t-label="E-mail" [t-value]="item.mail" style="margin-left: 80px;"></thf-info>
 *            <thf-info t-label="Última Atualização" [t-value]="item.updated" style="margin-left: 80px;"></thf-info>
 *            <thf-info t-label="Telefone" [t-value]="item.phoneNumber" style="margin-left: 80px;"></thf-info>
 *          </thf-list-item-content>
 *          <thf-list-item-detail>
 *            <div>Outros detalhes a serem exibidos</div>
 *          </thf-list-item-detail>
 *        </thf-list-item>
 *    </thf-list>
 *    <hr/>
 *    <thf-list (t-show-more)="showMoreFunction()" [t-show-more-disabled]="showMoreDisabled">
 *        <thf-list-item *ngFor="let item of data; let i = index"
 *          [t-title]="item.title"
 *          [t-index]="i"
 *          [t-actions]="eventsObject2">
 *          <thf-list-item-content style="display:flex">
 *            <thf-info t-label="Cadastro" [t-value]="item.register"></thf-info>
 *            <thf-info t-label="E-mail" [t-value]="item.mail" style="margin-left: 80px;"></thf-info>
 *            <thf-info t-label="Última Atualização" [t-value]="item.updated" style="margin-left: 80px;"></thf-info>
 *            <thf-info t-label="Telefone" [t-value]="item.phoneNumber" style="margin-left: 80px;"></thf-info>
 *          </thf-list-item-content>
 *          <thf-list-item-detail>
 *            <div>Outros detalhes a serem exibidos</div>
 *          </thf-list-item-detail>
 *       </thf-list-item>
 *   </thf-list>
 * </file>
 *
 * <file name="sample-thf-list.component.ts">
 * import { Component, OnInit } from '\@angular/core';
 *
 * import { ThfModule } from '\@totvs/thf-web';
 *
 * \@Component({
 *   selector: 'sample-thf-list',
 *   templateUrl: './sample-thf-list.component.html',
 * })
 * export class SampleThfListComponent {
 *
 *   showMoreDisabled = false;
 *
 *   data: Array<any> = [
 *     {
 *       title: 'José dos Santos', name: 'José', register: '22/03/2017', mail: 'jose.santos\@email.com.br',
 *       updated: '22/10/2017 as 04:20', phoneNumber: '(47) 8888-8888'
 *     },
 *     {
 *       title: 'Maria da Silva', name: 'Maria', register: '21/03/2017', mail: 'maria.silva\@email.com.br',
 *       updated: '16/10/2017 as 04:20', phoneNumber: '(42) 9888-9999'
 *     }
 *   ];
 *
 *   data2: Array<any> = [
 *     { 'title': 'Marte', 'name': 'Marte' },
 *     { 'title': 'Plutão', 'name': 'Plutão' },
 *     { 'title': 'Terra', 'name': 'Terra' }];
 *
 *   eventsObject: Array<any> = [{ 'label': 'Editar', 'function': 'onClick1' },
 *   { 'label': 'Excluir', 'function': 'onClick2' }];
 *
 *   eventsObject2: Array<any> = [{ 'label': 'Editar', 'function': 'onClick1' },
 *   { 'label': 'Excluir', 'function': 'onClick2' },
 *   { 'label': 'Clonar', 'function': 'onClick3' }];
 *
 *   onClick1() {
 *     alert('onClick1');
 *   }
 *
 *   onClick2() {
 *     alert('onClick2');
 *   }
 *
 *   onClick3() {
 *     alert('onClick3');
 *   }
 *
 *   showMoreFunction() {
 *     this.data.push({
 *       title: 'Marcos Figueira', name: 'Marcos', register: '10/08/2017',
 *       mail: 'marcos.figueira\@email.com.br', updated: '01/08/2017 as 14:28',
 *       phoneNumber: '(12) 9778-9985'
 *     });
 *     this.showMoreDisabled = true;
 *   }
 * }
 *
 * </file>
 * </example>
 */
var ThfListComponent = (function () {
    function ThfListComponent() {
        /**
         * Recebe uma ação de clique do controller da página para o botão "Carregar mais resultados".
         */
        this.showMore = new core.EventEmitter;
        /**
         * Recebe valores "true" ou "false" para habilitar ou desabilitar o botão "Carregar Mais Resultados"
         */
        this.showMoreDisabled = 'false';
    }
    /**
     * @return {?}
     */
    ThfListComponent.prototype.onShowMore = function () {
        this.showMore.emit(null);
    };
    ThfListComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thf-list', template: "<ng-content></ng-content> <div style=\"width: 100%\" *ngIf=\"showMore.observers.length > 0\"> <div style=\"text-align: center;\"> <thf-button t-label=\"Carregar mais resultados\" (t-click)=\"onShowMore()\" t-id=\"btnShowMoreId\" [t-disabled]=\"showMoreDisabled\"></thf-button> </div> </div>"
                },] },
    ];
    /**
     * @nocollapse
     */
    ThfListComponent.ctorParameters = function () { return []; };
    ThfListComponent.propDecorators = {
        'showMore': [{ type: core.Output, args: ['t-show-more',] },],
        'showMoreDisabled': [{ type: core.Input, args: ['t-show-more-disabled',] },],
    };
    return ThfListComponent;
}());

var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 *
 * \@example
 * <example name='thf-button-labs' title='Totvs Button Labs'>
 *  <file name='sample-thf-button-labs.component.html'> </file>
 *  <file name='sample-thf-button-labs.component.ts'> </file>
 * </example>
 *
 * <example name='thf-button-click' title='Eventos de click e botão desabilitado'>
 *  <file name='sample-thf-button-click.component.html'> </file>
 *  <file name='sample-thf-button-click.component.ts'> </file>
 *  <file name='sample-thf-button-click.component.css'> </file>
 * </example>
 *
 * <example name='thf-button' title='Tipos e tamanhos do thf-button' >
 *  <file name='sample-thf-button.component.html'> </file>
 * <file name='sample-thf-button.component.ts'> </file>
 * </example>
 */
var ThfButtonComponent = (function (_super) {
    __extends(ThfButtonComponent, _super);
    function ThfButtonComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ThfButtonComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thf-button', template: "<button class=\"thf-button\" type=\"button\" id=\"{{ id }}\" [disabled]=\"disabled\" [ngClass]=\"{ 'thf-button--primary' : primary, 'thf-button--sm' : small }\" (click)=\"onClick()\"> <span *ngIf=\"icon\" class=\"thf-icon {{ icon }}\" aria-hidden=\"true\"></span> {{ label }} </button> ",
                    providers: []
                },] },
    ];
    /**
     * @nocollapse
     */
    ThfButtonComponent.ctorParameters = function () { return []; };
    return ThfButtonComponent;
}(thfButtonBase.ThfButtonBaseComponent));

/**
 * \@description
 * Módulo do componente thf-button.
 */
var ThfButtonModule = (function () {
    function ThfButtonModule() {
    }
    ThfButtonModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [
                        common.CommonModule
                    ],
                    declarations: [ThfButtonComponent],
                    exports: [ThfButtonComponent]
                },] },
    ];
    /**
     * @nocollapse
     */
    ThfButtonModule.ctorParameters = function () { return []; };
    return ThfButtonModule;
}());

/**
 * \@description
 *
 * Este componente é utilizado em conjunto thf-list.
 */
var ThfListItemComponent = (function () {
    /**
     * @param {?} myElement
     * @param {?} viewRef
     */
    function ThfListItemComponent(myElement, viewRef) {
        this.myElement = myElement;
        this.viewRef = viewRef;
        /**
         * Lista de ações a ser executadas no item. Ao passar até duas ações é exibido apenas botões,
         * se passar de duas ações é exibido um menu com todas as opções.
         */
        this.actions = [];
        this.showLink = true;
        this.showContent = true;
        this._parentRef = viewRef['_view']['component'];
        this.collapsed = true;
    }
    /**
     * @return {?}
     */
    ThfListItemComponent.prototype.ngAfterContentInit = function () {
        if (this.content && this.content.nativeElement.children.length === 0) {
            this.showContent = false;
        }
        if (this.detailsContent && this.detailsContent.nativeElement.children.length === 0) {
            this.showLink = false;
        }
    };
    /**
     * @param {?} index
     * @return {?}
     */
    ThfListItemComponent.prototype.showDetails = function (index) {
        var /** @type {?} */ nativeElement = this.myElement.nativeElement;
        var /** @type {?} */ spanElement = nativeElement.querySelector("#spanIcon" + index + "Id");
        var /** @type {?} */ colElement = nativeElement.querySelector("#col" + index + "Id");
        if (spanElement) {
            var /** @type {?} */ icon = spanElement.className.includes('thf-icon-arrow-up') ? 'thf-icon-arrow-down' : 'thf-icon-arrow-up';
            var /** @type {?} */ text = icon === 'thf-icon-arrow-up' ? 'Ocultar detalhes' : 'Exibir detalhes';
            nativeElement.querySelector('.thf-list-details').innerHTML = "<span id=\"spanIcon" + index + "Id\" class=\"" + icon + "\"></span> " + text;
        }
        if (colElement) {
            colElement.className = colElement.className === 'collapse' ? 'not-collapse' : 'collapse';
        }
    };
    Object.defineProperty(ThfListItemComponent.prototype, "parentRef", {
        /**
         * @return {?}
         */
        get: function () {
            return this._parentRef;
        },
        enumerable: true,
        configurable: true
    });
    ThfListItemComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thf-list-item', template: "<div class=\"thf-list-border\"> <div class=\"thf-list-header-container\"> <div *ngIf=\"title\" class=\"thf-list-title-container\"> <span class=\"thf-list-title\">{{title}}</span> </div> <div id=\"divActionButtonsId\" class=\"thf-list-actions-button\" *ngIf=\"actions.length > 0 && actions.length <= 2\"> <thf-button *ngFor=\"let action of actions\" [t-label]=\"action.label\" (t-click)=\"parentRef[action.function](index)\" t-small=\"true\"></thf-button> </div> <div id=\"divActionDropdownId\" class=\"thf-list-more-button\" *ngIf=\"actions.length > 0 && actions.length > 2\"> <a href=\"javascript:void(0);\" id=\"dropdownMenu{{index}}\" data-toggle=\"dropdown\"><span class=\"thf-icon thf-icon-more\"></span></a> <ul class=\"dropdown-menu thf-list-more-base\" aria-labelledby=\"dropdownMenu\"> <li class=\"thf-list-li-margin\" *ngFor=\"let action of actions\"> <a href=\"javascript:void(0);\" class=\"thf-list-more-text\" (click)=\"parentRef[action.function](index)\">{{action.label}}</a> </li> </ul> </div>  </div> <div class=\"thf-list-item-container\" #content [hidden]=\"!showContent\"> <ng-content select=\"thf-list-item-content\"></ng-content> </div> <div select=\"details\" class=\"thf-list-details-link text-center\" [hidden]=\"!showLink\"> <a href=\"javascript:void(0);\" class=\"thf-list-details\" (click)=\"showDetails(index)\"><span id=\"spanIcon{{index}}Id\" class=\"thf-icon thf-icon-arrow-down\"></span> Exibir detalhes</a> <div id=\"col{{index}}Id\" class=\"collapse\" #detailsContent> <ng-content select=\"thf-list-item-detail\"></ng-content> </div> </div> </div>", styles: [".thf-list-title { display: block; height: 22px; font-family: NunitoSans; font-size: 24px; line-height: 1.25; text-align: left; color: #0c9abe; margin: 19px 0 27px 27px; } .thf-list-title-container { width: 60%; } .thf-list-border { border-radius: 3px; background-color: #ffffff; border: solid 1px #dbdedf; margin-bottom: 16px; } .thf-list-actions-button, .thf-list-more-button { padding-right: 38px; margin-top: 18px; width: 40%; text-align: end; } .thf-list-header-container { width: 100%; display: flex; } .thf-list-item-container { padding-left: 27px; margin-bottom: 20px; } thf-button { padding-left: 10px; } .thf-list-li-margin { padding-top: 8px; padding-bottom: 8px; } .thf-list-more-text { font-family: NunitoSans; font-size: 14px !important; line-height: 1.71; text-align: left; color: #1d9abc; padding-left: 16px; } .thf-list-more-text:hover { color: #c44944; } .dropdown-menu { left: 82% !important; top: initial !important; } .thf-list-more-base { border-radius: 3px; background-color: #ffffff; border: none; left: auto; box-shadow: 0px 1px 4px 0 rgba(0, 0, 0, 0.3) !important; } .thf-list-details { height: 12px; font-family: 'NunitoSans-Bold'; font-size: 14px !important; line-height: 1.71; text-align: left; color: #1d9abc; padding-top: 13px; padding-bottom: 15px; } .thf-list-details-link { border-top: solid 1px #dbdedf; margin-top: 49px; } "]
                },] },
    ];
    /**
     * @nocollapse
     */
    ThfListItemComponent.ctorParameters = function () { return [
        { type: core.ElementRef, },
        { type: core.ViewContainerRef, },
    ]; };
    ThfListItemComponent.propDecorators = {
        'title': [{ type: core.Input, args: ['t-title',] },],
        'index': [{ type: core.Input, args: ['t-index',] },],
        'actions': [{ type: core.Input, args: ['t-actions',] },],
        'detailsContent': [{ type: core.ViewChild, args: ['detailsContent',] },],
        'content': [{ type: core.ViewChild, args: ['content',] },],
    };
    return ThfListItemComponent;
}());

/**
 * \@description
 *
 * Este componente é utilizado em conjunto thf-list-item. Neste componente deve ser passado o
 * HTML que será exibido ao clicar no link "Exibir Detalhes".
 */
var ThfListItemDetailComponent = (function () {
    function ThfListItemDetailComponent() {
    }
    ThfListItemDetailComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thf-list-item-detail', template: "<ng-content></ng-content>"
                },] },
    ];
    /**
     * @nocollapse
     */
    ThfListItemDetailComponent.ctorParameters = function () { return []; };
    return ThfListItemDetailComponent;
}());

/**
 * \@description
 *
 * Este componente é utilizado em conjunto thf-list-item. Neste componente deve ser passado o
 * HTML que será exibido a cada item".
 */
var ThfListItemContentComponent = (function () {
    function ThfListItemContentComponent() {
    }
    ThfListItemContentComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thf-list-item-content', template: "<ng-content></ng-content>"
                },] },
    ];
    /**
     * @nocollapse
     */
    ThfListItemContentComponent.ctorParameters = function () { return []; };
    return ThfListItemContentComponent;
}());

/**
 * \@description
 * Módulo do componente thf-list
 */
var ThfListModule = (function () {
    function ThfListModule() {
    }
    ThfListModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [
                        common.CommonModule,
                        ThfButtonModule
                    ],
                    declarations: [
                        ThfListComponent,
                        ThfListItemComponent,
                        ThfListItemDetailComponent,
                        ThfListItemContentComponent
                    ],
                    exports: [
                        ThfListComponent,
                        ThfListItemComponent,
                        ThfListItemDetailComponent,
                        ThfListItemContentComponent
                    ],
                    providers: [],
                    schemas: []
                },] },
    ];
    /**
     * @nocollapse
     */
    ThfListModule.ctorParameters = function () { return []; };
    return ThfListModule;
}());

exports.ThfListModule = ThfListModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));
