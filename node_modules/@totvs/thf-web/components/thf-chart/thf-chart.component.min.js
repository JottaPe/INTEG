var __extends=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])};return function(t,o){e(t,o);function r(){this.constructor=t}t.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}();import{Component,ViewEncapsulation}from"@angular/core";import{ThfChartBaseComponent}from"@totvs/thf-core/components/thf-chart-base";import{ThfChartColors}from"@totvs/thf-core/components/thf-chart-base/thf-chart-colors.constant";var ThfChartComponent=function(e){__extends(t,e);function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.label={color:"#fff",background:"#0c9abe",border:{color:"#0c9abe"}},t}return t.prototype.getSeriesColor=function(){if(this.series){this.series;var e=this.typeChart,t=this.series.length-1;if("donut"===e||"funnel"===e||"pie"===e){var o=this.series[t].data.length-1;return ThfChartColors[o]}return ThfChartColors[t=t>=12?11:t]}return ThfChartColors[11]},t.decorators=[{type:Component,args:[{selector:"thf-chart",encapsulation:ViewEncapsulation.None,template:'<kendo-chart [seriesColors]="getSeriesColor()" [style.height]="height" [categoryAxis]="{\'categories\': categories}" (seriesClick)="onSeriesClick($event)" (seriesHover)="onSeriesHover($event)"> <kendo-chart-title [text]="title"> </kendo-chart-title> <kendo-chart-legend position="bottom" orientation="horizontal"> </kendo-chart-legend> <kendo-chart-tooltip> </kendo-chart-tooltip> <kendo-chart-value-axis> <kendo-chart-value-axis-item [max]="maxValue" [min]="minValue"> </kendo-chart-value-axis-item> </kendo-chart-value-axis> <kendo-chart-series> <kendo-chart-series-item *ngFor="let serie of series" [name]="serie.name" [type]="typeChart" [data]="serie.data"> <kendo-chart-series-item-labels [visible]="labelVisible" [color]="label.color" [background]="label.background" [border]="label.border"> </kendo-chart-series-item-labels> </kendo-chart-series-item> </kendo-chart-series> </kendo-chart> '}]}],t.ctorParameters=function(){return[]},t}(ThfChartBaseComponent);export{ThfChartComponent};function ThfChartComponent_tsickle_Closure_declarations(){ThfChartComponent.decorators,ThfChartComponent.ctorParameters,ThfChartComponent.prototype.label}