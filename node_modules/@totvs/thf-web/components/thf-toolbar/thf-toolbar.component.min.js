var __extends=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var n in o)o.hasOwnProperty(n)&&(t[n]=o[n])};return function(o,n){t(o,n);function i(){this.constructor=o}o.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();import{Component,ViewContainerRef}from"@angular/core";import{Title}from"@angular/platform-browser";import{ThfToolbarBaseComponent}from"@totvs/thf-core/components/thf-toolbar-base";var ThfToolbarComponent=function(t){__extends(o,t);function o(o,n){var i=t.call(this)||this;return i.titleService=o,i.viewRef=n,i.notificationMenu=!1,i.userMenu=!1,i.parentRef=n._view.component,i}return o.prototype.ngOnInit=function(){this.setTitle(this.title)},o.prototype.setTitle=function(t){this.titleService.setTitle(t)},o.prototype.showNotificationMenu=function(){this.notificationMenu=!this.notificationMenu,this.userMenu=!1},o.prototype.showUserMenu=function(){this.userMenu=!this.userMenu,this.notificationMenu=!1},o.decorators=[{type:Component,args:[{selector:"thf-toolbar",template:'<div class="thf-toolbar"> <div class="thf-toolbar-title" (click)="userMenu = notificationMenu = false;"> {{title}} </div> <div *ngIf="showNotification" class="thf-toolbar-notification" (click)="showNotificationMenu()"> <span class="thf-icon thf-icon-notification"></span> <div *ngIf="notificationNumber > 0" class="thf-toolbar-notification-badge">{{ notificationNumber }}</div> <div class="thf-toolbar-notification-content" [style.display]="notificationMenu ? \'block\' : \'none\'"> <div *ngFor="let notificationAction of notificationActions" class="thf-notification-item" (click)="parentRef[notificationAction.action](notificationAction)"> {{ notificationAction.label }} </div> </div> </div> <div *ngIf="userSrc" class="thf-toolbar-avatar thf-clickable" (click)="showUserMenu()"> <thf-avatar t-size="xs" [t-src]="userSrc"></thf-avatar> <div class="thf-toolbar-user-menu-content" [style.display]="userMenu ? \'block\' : \'none\'"> <thf-avatar t-size="md" [t-src]="userSrc"></thf-avatar> <div class="thf-notification-item"><span class="thf-icon thf-icon-user"></span>{{ userName }}</div> <hr> <div *ngFor="let userAction of userActions" class="thf-notification-item" (click)="parentRef[userAction.action](userAction)"> {{ userAction.label }} </div> </div> </div> </div> '}]}],o.ctorParameters=function(){return[{type:Title},{type:ViewContainerRef}]},o}(ThfToolbarBaseComponent);export{ThfToolbarComponent};function ThfToolbarComponent_tsickle_Closure_declarations(){ThfToolbarComponent.decorators,ThfToolbarComponent.ctorParameters,ThfToolbarComponent.prototype.notificationMenu,ThfToolbarComponent.prototype.userMenu,ThfToolbarComponent.prototype.parentRef,ThfToolbarComponent.prototype.titleService,ThfToolbarComponent.prototype.viewRef}