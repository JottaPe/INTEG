var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Component } from '@angular/core';
import { ThfButtonBaseComponent } from '@totvs/thf-core/components/thf-button-base';
/**
 *
 * \@example
 * <example name='thf-button-labs' title='Totvs Button Labs'>
 *  <file name='sample-thf-button-labs.component.html'> </file>
 *  <file name='sample-thf-button-labs.component.ts'> </file>
 * </example>
 *
 * <example name='thf-button-click' title='Eventos de click e botÃ£o desabilitado'>
 *  <file name='sample-thf-button-click.component.html'> </file>
 *  <file name='sample-thf-button-click.component.ts'> </file>
 *  <file name='sample-thf-button-click.component.css'> </file>
 * </example>
 *
 * <example name='thf-button' title='Tipos e tamanhos do thf-button' >
 *  <file name='sample-thf-button.component.html'> </file>
 * <file name='sample-thf-button.component.ts'> </file>
 * </example>
 */
var ThfButtonComponent = (function (_super) {
    __extends(ThfButtonComponent, _super);
    function ThfButtonComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ThfButtonComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thf-button', template: "<button class=\"thf-button\" type=\"button\" id=\"{{ id }}\" [disabled]=\"disabled\" [ngClass]=\"{ 'thf-button--primary' : primary, 'thf-button--sm' : small }\" (click)=\"onClick()\"> <span *ngIf=\"icon\" class=\"thf-icon {{ icon }}\" aria-hidden=\"true\"></span> {{ label }} </button> ",
                    providers: []
                },] },
    ];
    /**
     * @nocollapse
     */
    ThfButtonComponent.ctorParameters = function () { return []; };
    return ThfButtonComponent;
}(ThfButtonBaseComponent));
export { ThfButtonComponent };
function ThfButtonComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    ThfButtonComponent.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ThfButtonComponent.ctorParameters;
}
