(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common'], factory) :
	(factory((global['thf-info'] = {}),global.core,global.common));
}(this, (function (exports,core,common) { 'use strict';

/**
 * \@description
 * Este componente tem como objetivo renderizar valores na tela no estilo label na parte superior e
 * valor na parte inferior. Facilita a exibição de dados pois vem com layout padrão Totvs.
 *
 * \@example
 * <example name='thf-info'>
 * <file name='sample-thf-info.component.html'>
 *    <thf-info t-label="Label" t-value="Valor"></thf-info>
 * </file>
 *
 * <file name="sample-thf-info.component.ts">
 *  import { Component, OnInit } from '\@angular/core';
 *  import { ThfModule } from '\@totvs/thf-web';
 *
 *  \@Component({
 *   selector: 'sample-thf-info',
 *   templateUrl: './sample-thf-info.component.html',
 *  })
 *  export class SampleThfInfoComponent {
 *  }
 * </file>
 * </example>
 */
var ThfInfoComponent = (function () {
    function ThfInfoComponent() {
    }
    ThfInfoComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thf-info', template: "<div><span class=\"thf-info label\">{{label}}</span></div> <div><span class=\"thf-info value\">{{value}}</span></div> ", styles: [".thf-info.label { font-family: 'NunitoSans-Bold'; font-size: 14px; text-align: left; color: #4a5c60; height: 12px; padding: 0px; } .thf-info.value { font-family: 'NunitoSans'; font-size: 16px; text-align: left; color: #1e2526; height: 13px; padding: 0px; margin-top: 11px; display: block; } "]
                },] },
    ];
    /**
     * @nocollapse
     */
    ThfInfoComponent.ctorParameters = function () { return []; };
    ThfInfoComponent.propDecorators = {
        'label': [{ type: core.Input, args: ['t-label',] },],
        'value': [{ type: core.Input, args: ['t-value',] },],
    };
    return ThfInfoComponent;
}());

/**
 * \@description
 * Módulo do componente thf-info
 */
var ThfInfoModule = (function () {
    function ThfInfoModule() {
    }
    ThfInfoModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [
                        common.CommonModule
                    ],
                    declarations: [
                        ThfInfoComponent
                    ],
                    exports: [ThfInfoComponent],
                    providers: [],
                    schemas: []
                },] },
    ];
    /**
     * @nocollapse
     */
    ThfInfoModule.ctorParameters = function () { return []; };
    return ThfInfoModule;
}());

exports.ThfInfoModule = ThfInfoModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));
