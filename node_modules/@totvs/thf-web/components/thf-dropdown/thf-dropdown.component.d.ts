import { ElementRef, ViewContainerRef } from '@angular/core';
import { Router } from '@angular/router';
/**
 * @description
 * O componente **thf-dropdown** pode ser utilizado como um agrupador de ações.
 *
 * @example
 * <example name='thf-dropdown'>
 *  <file name='sample-thf-dropdown.component.html'>
 *    <thf-dropdown
 *      [t-label]="label"
 *      [t-actions]="actions">
 *    </thf-dropdown>
 *
 *    <thf-dropdown
 *      [t-disabled]="disabled"
 *      [t-label]="label"
 *      [t-actions]="actions">
 *    </thf-dropdown>
 *
 *     <thf-dropdown
 *      [t-label]="label">
 *     </thf-dropdown>
 *
 * </file>
 *
 *  <file name='sample-thf-dropdown.component.ts'>
 *    import { Component } from '@angular/core';
 *    import { ThfModule } from '@totvs/thf-web';
 *
 *   @Component({
 *      selector: 'sample-thf-dropdown',
 *      templateUrl: './sample-thf-dropdown.component.html'
 *   })
 *   export class SampleThfDropdownComponent {
 *
 *       public disabled = true;
 *       public label  = 'Outras ações';
 *       public actions: Array<{}> = [
 *         {label: 'Adicionar', action: this.add, icon: 'thf-icon-plus'},
 *         {label: 'Clonar', action: this.clone, icon: 'thf-icon-copy', disabled: true},
 *         {label: 'Totvs', url: 'http://www.google.com', icon: 'thf-icon-document'}
 *       ];
 *
 *      public add(): void {
 *          console.log('Adicionar');
 *      }
 *
 *      public clone(): void {
 *          console.log('Clonar');
 *      }
 *   }
 *  </file>
 *</example>
 */
export declare class ThfDropdownComponent {
    private _element;
    private _view;
    private _router;
    private _open;
    private _parentRef;
    icon: string;
    /**Desabilita o dropdown na página.*/
    disabled?: string;
    /**Adiciona a label no dropdown*/
    label?: string;
    /** Nesta propriedade deve ser definido um array de objetos que implementam a interface IThfDropdownAction. */
    actions?: Array<{}>;
    constructor(_element: ElementRef, _view: ViewContainerRef, _router: Router);
    toggleButton(): void;
    onClick(item: any): void;
    private _addListenerCloseDropdown();
    private _callAction(_function);
    private _callActionOfContext(_function, _context);
    private _selector(query);
    private _isTypeof(object, type);
}
