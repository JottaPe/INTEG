!function(o,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common"),require("@angular/core"),require("@angular/router")):"function"==typeof define&&define.amd?define(["exports","@angular/common","@angular/core","@angular/router"],t):t(o["thf-dropdown"]={},o.common,o.core,o.router)}(this,function(o,t,e,n){"use strict";var r=function(){function o(o,t,e){this._element=o,this._view=t,this._router=e,this._open=!1,this.icon="thf-icon-arrow-down",this._parentRef=t._view.component,this._addListenerCloseDropdown()}return o.prototype.toggleButton=function(){this.icon=this._open?"thf-icon-arrow-down":"thf-icon-arrow-up",this.actions&&this.actions.length&&this._selector(".dropdown").classList.toggle("t-show"),this._open=!this._open},o.prototype.onClick=function(o){if(o.url){var t=o.url;/(http(s?))\:\/\//gi.test(t)?window.open(t,"_blank"):this._router.navigate([t])}else o.action&&this._callAction(o.action)},o.prototype._addListenerCloseDropdown=function(){var o=this;window.onclick=function(t){"button-dropdown"!==(t.target&&t.target.getAttribute("class"))&&o._open&&o.toggleButton()}},o.prototype._callAction=function(o){this._callActionOfContext(o,this._parentRef)},o.prototype._callActionOfContext=function(o,t){this._isTypeof(o,"function")?o.call(t):t[o]()},o.prototype._selector=function(o){return this._element.nativeElement.querySelector(o)},o.prototype._isTypeof=function(o,t){return typeof o===t},o.decorators=[{type:e.Component,args:[{selector:"thf-dropdown",template:'<div class="dropdown"> <div class="button-dropdown" [ngClass]="{\'disabled\' : disabled}" (click)="toggleButton()"> {{label}} <div class="hidden-xs icon-dropdown thf-icon {{icon}}" (click)="toggleButton()"></div> </div> <ul class="dropdown-content"> <li *ngFor="let action of actions"> <a (click)="onClick(action)" [ngClass]="{\'disabled\' : action.disabled}"> {{action?.label}} </a> </li> </ul> </div> ',styles:[".dropdown { position: relative; display: inline-block; width: inherit; } .dropdown.t-show > .button-dropdown { border-bottom-left-radius: 0; border-bottom-right-radius: 0; border-bottom: none; } .dropdown.t-show > .dropdown-content { display: block !important; } div.button-dropdown { cursor: pointer; line-height: 24px; font-size: 16px; height: 44px; border-radius: 3px; padding: 9px 38px 9px 16px; background-color: #ffffff; border: solid 1px #0c9abe; color: #0c9abe; } div.button-dropdown > span { padding-top: 3px; } div.button-dropdown.disabled { background-color: #ffffff; border: solid 1px #4a5c60; opacity: 0.4; } div.button-dropdown:hover { color: #0a7b98; border: solid 1px #0a7b98; } ul.dropdown-content { display: none; position: absolute; background-color: #ffffff; border: solid 1px #0c9abe; border-top: none; z-index: 1; width: 100%; max-height: 175px; overflow-y: auto; list-style-type: none; padding: 0; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; } ul.dropdown-content > li > a { color: #0c9abe; padding: 10px 16px; text-decoration: none; display: block; cursor: pointer; word-wrap: break-word; line-height: 1.5; } ul.dropdown-content > li > a:hover { color: #0a7b98; } ul.dropdown-content > li > a:active { color: #075c72; } .disabled { pointer-events: none; color: #b7bebf !important; } .icon-dropdown { font-size: 24px; right: 10px; top: 10px; position: absolute; } ::-webkit-scrollbar { width: 7px; } ::-webkit-scrollbar-track { display: none; } ::-webkit-scrollbar-thumb { border-radius: 10px; background-color: #0c9abe; } "]}]}],o.ctorParameters=function(){return[{type:e.ElementRef},{type:e.ViewContainerRef},{type:n.Router}]},o.propDecorators={disabled:[{type:e.Input,args:["t-disabled"]}],label:[{type:e.Input,args:["t-label"]}],actions:[{type:e.Input,args:["t-actions"]}]},o}(),i=function(){function o(){}return o.decorators=[{type:e.NgModule,args:[{imports:[t.CommonModule],declarations:[r],exports:[r]}]}],o.ctorParameters=function(){return[]},o}();o.ThfDropdownModule=i,Object.defineProperty(o,"__esModule",{value:!0})});