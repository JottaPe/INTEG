import { ElementRef, EventEmitter, OnInit } from '@angular/core';
import { ThfCalendarLangService } from './thf-calendar.lang.service';
import { ThfCalendarService } from './thf-calendar.service';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente de calend√°rio de uso interno
 */
export declare class ThfCalendarComponent implements OnInit {
    private elementRef;
    private readonly thfCalendarService;
    private readonly thfCalendarLangService;
    private _date;
    date: Date;
    dateChange: EventEmitter<Date>;
    private _dateStart;
    dateStart: Date;
    private _dateEnd;
    dateEnd: Date;
    locale: string;
    submit: EventEmitter<Date>;
    elDays: ElementRef;
    elMonths: ElementRef;
    elYears: ElementRef;
    today: Date;
    isMobile: any;
    currentMonth: any;
    currentMonthNumber: number;
    currentYear: number;
    currentDay: number;
    currentDayOfWeek: any;
    displayMonth: any;
    displayMonthNumber: number;
    displayYear: number;
    displayDecade: Array<number>;
    displayStartDecade: number;
    displayFinalDecade: number;
    displayDays: Array<number>;
    displayMonths: Array<any>;
    displayWeedDays: Array<any>;
    lastDisplay: string;
    constructor(elementRef: ElementRef, thfCalendarService: ThfCalendarService, thfCalendarLangService: ThfCalendarLangService);
    ngOnInit(): void;
    init(): void;
    private setMobileVisualization();
    private updateDate(date);
    private updateDisplay(year, month);
    private equalsDate(date1, date2);
    selectDay(): void;
    selectMonth(): void;
    selectYear(): void;
    getDayBackgroundColor(day: Date): "thf-calendar-box-background-selected" | "thf-calendar-box-background-today" | "thf-calendar-box-background" | "thf-calendar-box-background-disabled" | "";
    getDayForegroundColor(day: Date): "thf-calendar-box-foreground-selected" | "thf-calendar-box-foreground-today" | "thf-calendar-box-foreground" | "thf-calendar-box-foreground-disabled";
    dateInRange(date: Date): boolean;
    getMonthBackgroundColor(month: any): "thf-calendar-box-background-selected" | "thf-calendar-box-background";
    getMonthForegroundColor(month: any): "thf-calendar-box-foreground-selected" | "thf-calendar-box-foreground";
    getYearBackgroundColor(year: any): "thf-calendar-box-background-selected" | "thf-calendar-box-background";
    getYearForegroundColor(year: any): "thf-calendar-box-foreground-selected" | "thf-calendar-box-foreground";
    onPrevMonth(): void;
    onNextMonth(): void;
    onPrevYear(): void;
    onNextYear(): void;
    onPrevDecade(): void;
    onNextDecade(): void;
    onSelectYear(year: any, month: any): void;
    onSelectMonth(year: any, month: any): void;
    onSelectDate(date: Date): void;
    getArrayDecade(year: any): void;
    getWordMonth(): any;
    getWordYear(): any;
}
