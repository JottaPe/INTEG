import{Component,ElementRef,EventEmitter,Input,Output,ViewChild}from"@angular/core";import{isMobile}from"@totvs/thf-core/utils/util";import{ThfCalendarLangService}from"./thf-calendar.lang.service";import{ThfCalendarService}from"./thf-calendar.service";var ThfCalendarComponent=function(){function t(t,e,a){this.elementRef=t,this.dateChange=new EventEmitter,this.submit=new EventEmitter,this.today=new Date,this.isMobile=isMobile,this.displayMonths=Array(),this.displayWeedDays=Array(),this.thfCalendarService=e,this.thfCalendarLangService=a}return Object.defineProperty(t.prototype,"date",{get:function(){return this._date},set:function(t){t&&(this._date=t,this.updateDate(t))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"dateStart",{get:function(){return this._dateStart},set:function(t){if(t){var e=t.getFullYear(),a=t.getMonth(),n=t.getDate();this._dateStart=new Date(e,a,n,0,0,0)}else this._dateStart=void 0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"dateEnd",{get:function(){return this._dateEnd},set:function(t){if(t){var e=t.getFullYear(),a=t.getMonth(),n=t.getDate();this._dateEnd=new Date(e,a,n,23,59,59)}else this._dateEnd=void 0},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.thfCalendarLangService.setLanguage(this.locale),this.displayWeedDays=this.thfCalendarLangService.getArrayWeekDays(),this.displayMonths=this.thfCalendarLangService.getArrayMonths(),this.init()},t.prototype.init=function(){this.date||(this.date=new Date),this.selectDay(),this.updateDate(this.date),this.isMobile()&&this.setMobileVisualization()},t.prototype.setMobileVisualization=function(){var t=this.elementRef.nativeElement.querySelector(".thf-calendar-overlay");this.elementRef.nativeElement.querySelector(".thf-calendar").classList.add("thf-calendar-mobile"),t.classList.remove("thf-invisible")},t.prototype.updateDate=function(t){this.currentMonthNumber=t.getMonth(),this.currentMonth=this.displayMonths[this.currentMonthNumber],this.currentYear=t.getFullYear(),this.currentDay=t.getDate(),this.currentDayOfWeek=this.displayWeedDays[t.getDay()],this.updateDisplay(this.currentYear,this.currentMonthNumber)},t.prototype.updateDisplay=function(t,e){var a=this.thfCalendarService.monthDays(t,e);this.displayDays=[].concat.apply([],a),this.displayMonthNumber=e,this.displayMonth=this.displayMonths[e],this.displayYear=t,this.getArrayDecade(t)},t.prototype.equalsDate=function(t,e){try{return t.getFullYear()===e.getFullYear()&&t.getMonth()===e.getMonth()&&t.getDate()===e.getDate()}catch(t){return!1}},t.prototype.selectDay=function(){this.elDays.nativeElement.classList.remove("thf-invisible"),this.elMonths.nativeElement.classList.add("thf-invisible"),this.elYears.nativeElement.classList.add("thf-invisible"),this.lastDisplay="day"},t.prototype.selectMonth=function(){this.elDays.nativeElement.classList.add("thf-invisible"),this.elMonths.nativeElement.classList.remove("thf-invisible"),this.elYears.nativeElement.classList.add("thf-invisible"),this.lastDisplay="month"},t.prototype.selectYear=function(){this.elDays.nativeElement.classList.add("thf-invisible"),this.elMonths.nativeElement.classList.add("thf-invisible"),this.elYears.nativeElement.classList.remove("thf-invisible")},t.prototype.getDayBackgroundColor=function(t){return this.equalsDate(t,this.date)?"thf-calendar-box-background-selected":this.equalsDate(t,this.today)?"thf-calendar-box-background-today":t?this.dateInRange(t)?"thf-calendar-box-background":"thf-calendar-box-background-disabled":""},t.prototype.getDayForegroundColor=function(t){return this.equalsDate(t,this.date)?"thf-calendar-box-foreground-selected":this.equalsDate(t,this.today)?"thf-calendar-box-foreground-today":this.dateInRange(t)?"thf-calendar-box-foreground":"thf-calendar-box-foreground-disabled"},t.prototype.dateInRange=function(t){return this._dateStart&&!this._dateEnd?t>=this._dateStart:this._dateEnd&&!this._dateStart?t<=this._dateEnd:!this._dateStart||!this._dateEnd||t>=this._dateStart&&t<=this._dateEnd},t.prototype.getMonthBackgroundColor=function(t){return t===this.displayMonthNumber?"thf-calendar-box-background-selected":"thf-calendar-box-background"},t.prototype.getMonthForegroundColor=function(t){return t===this.displayMonthNumber?"thf-calendar-box-foreground-selected":"thf-calendar-box-foreground"},t.prototype.getYearBackgroundColor=function(t){return t===this.currentYear?"thf-calendar-box-background-selected":"thf-calendar-box-background"},t.prototype.getYearForegroundColor=function(t){return t===this.currentYear?"thf-calendar-box-foreground-selected":"thf-calendar-box-foreground"},t.prototype.onPrevMonth=function(){this.displayMonthNumber>0?this.updateDisplay(this.displayYear,this.displayMonthNumber-1):this.updateDisplay(this.displayYear-1,11)},t.prototype.onNextMonth=function(){this.displayMonthNumber<11?this.updateDisplay(this.displayYear,this.displayMonthNumber+1):this.updateDisplay(this.displayYear+1,0)},t.prototype.onPrevYear=function(){this.updateDisplay(this.displayYear-1,this.displayMonthNumber)},t.prototype.onNextYear=function(){this.updateDisplay(this.displayYear+1,this.displayMonthNumber)},t.prototype.onPrevDecade=function(){this.updateDisplay(this.displayYear-10,this.displayMonthNumber)},t.prototype.onNextDecade=function(){this.updateDisplay(this.displayYear+10,this.displayMonthNumber)},t.prototype.onSelectYear=function(t,e){"month"===this.lastDisplay?this.selectMonth():this.selectDay(),this.currentYear=t,this.updateDisplay(t,e)},t.prototype.onSelectMonth=function(t,e){this.selectDay(),this.updateDisplay(t,e)},t.prototype.onSelectDate=function(t){this.dateInRange(t)&&(this.date=t,this.dateChange.emit(t),this.submit.emit(this.date))},t.prototype.getArrayDecade=function(t){this.displayDecade=Array();var e;if(t%10==0){for(e=t;e<t+10;e++)this.displayDecade.push(e);this.displayStartDecade=t,this.displayFinalDecade=t+9}else{for(;t%10!=0;)t--;for(this.displayStartDecade=t,this.displayFinalDecade=t+9,e=t;e<t+10;e++)this.displayDecade.push(e)}},t.prototype.getWordMonth=function(){return this.thfCalendarLangService.getWordMonth()},t.prototype.getWordYear=function(){return this.thfCalendarLangService.getWordYear()},t.decorators=[{type:Component,args:[{selector:"thf-calendar",template:'<div class="thf-calendar-overlay thf-invisible"></div> <div class="thf-calendar"> <div #days> <div class="thf-calendar-nav"> <span (click)="onPrevMonth()" class="thf-calendar-nav-left thf-icon thf-icon-arrow-left"></span> <div class="thf-calendar-nav-title"> <span class="thf-clickable" (click)="selectMonth()">{{ displayMonth }}</span> <span class="thf-clickable" (click)="selectYear()">{{ displayYear }}</span> </div> <span (click)="onNextMonth()" class="thf-calendar-nav-right thf-icon thf-icon-arrow-right"></span> </div> <div class="thf-calendar-content"> <div class="thf-calendar-labels"> <div class="thf-calendar-label" *ngFor="let day of displayWeedDays"> {{ day.toLowerCase() }} </div> </div> <div class="thf-calendar-content-list-day"> <div *ngFor="let day of displayDays" class="thf-calendar-day thf-calendar-box-background" (click)="onSelectDate(day)" [ngClass]="getDayBackgroundColor(day)"> <span *ngIf="day != 0" [ngClass]="getDayForegroundColor(day)"> {{ day.getDate() }} </span> </div> </div> </div> </div> <div #months> <div class="thf-calendar-nav"> <span (click)="onPrevYear()" class="thf-calendar-nav-left thf-icon thf-icon-arrow-left"></span> <div class="thf-calendar-nav-title"> <span class="thf-clickable" (click)="selectYear()">{{ displayYear }}</span> </div> <span (click)="onNextYear()" class="thf-calendar-nav-right thf-icon thf-icon-arrow-right"></span> </div> <div class="thf-calendar-content"> <div class="thf-calendar-labels"> <div class="thf-calendar-label"> {{ getWordMonth() }} </div> </div> <div class="thf-calendar-content-list-month"> <div *ngFor="let month of displayMonths; let i = index;" class="thf-calendar-month" (click)="onSelectMonth(displayYear, i)" [ngClass]="getMonthBackgroundColor(i)"> <span [ngClass]="getMonthForegroundColor(i)"> {{ month }} </span> </div> </div> </div> </div> <div #years> <div class="thf-calendar-nav"> <span (click)="onPrevDecade()" class="thf-calendar-nav-left thf-icon thf-icon-arrow-left"></span> <div class="thf-calendar-nav-title"> {{ displayStartDecade }} - {{ displayFinalDecade }} </div> <span (click)="onNextDecade()" class="thf-calendar-nav-right thf-icon thf-icon-arrow-right"></span> </div> <div class="thf-calendar-content"> <div class="thf-calendar-labels"> <div class="thf-calendar-label"> {{ getWordYear() }} </div> </div> <div class="thf-calendar-content-list-year"> <div *ngFor="let year of displayDecade; let i = index;" class="thf-calendar-year" (click)="onSelectYear(year, displayMonthNumber)" [ngClass]="getYearBackgroundColor(year)"> <span [ngClass]="getYearForegroundColor(year)"> {{ year }} </span> </div> </div> </div> </div> </div> '}]}],t.ctorParameters=function(){return[{type:ElementRef},{type:ThfCalendarService},{type:ThfCalendarLangService}]},t.propDecorators={date:[{type:Input,args:["t-date"]}],dateChange:[{type:Output,args:["t-dateChange"]}],dateStart:[{type:Input,args:["t-start"]}],dateEnd:[{type:Input,args:["t-end"]}],locale:[{type:Input,args:["t-locale"]}],submit:[{type:Output,args:["t-submit"]}],elDays:[{type:ViewChild,args:["days",{read:ElementRef}]}],elMonths:[{type:ViewChild,args:["months",{read:ElementRef}]}],elYears:[{type:ViewChild,args:["years",{read:ElementRef}]}]},t}();export{ThfCalendarComponent};function ThfCalendarComponent_tsickle_Closure_declarations(){ThfCalendarComponent.decorators,ThfCalendarComponent.ctorParameters,ThfCalendarComponent.propDecorators,ThfCalendarComponent.prototype.thfCalendarService,ThfCalendarComponent.prototype.thfCalendarLangService,ThfCalendarComponent.prototype._date,ThfCalendarComponent.prototype.dateChange,ThfCalendarComponent.prototype._dateStart,ThfCalendarComponent.prototype._dateEnd,ThfCalendarComponent.prototype.locale,ThfCalendarComponent.prototype.submit,ThfCalendarComponent.prototype.elDays,ThfCalendarComponent.prototype.elMonths,ThfCalendarComponent.prototype.elYears,ThfCalendarComponent.prototype.today,ThfCalendarComponent.prototype.isMobile,ThfCalendarComponent.prototype.currentMonth,ThfCalendarComponent.prototype.currentMonthNumber,ThfCalendarComponent.prototype.currentYear,ThfCalendarComponent.prototype.currentDay,ThfCalendarComponent.prototype.currentDayOfWeek,ThfCalendarComponent.prototype.displayMonth,ThfCalendarComponent.prototype.displayMonthNumber,ThfCalendarComponent.prototype.displayYear,ThfCalendarComponent.prototype.displayDecade,ThfCalendarComponent.prototype.displayStartDecade,ThfCalendarComponent.prototype.displayFinalDecade,ThfCalendarComponent.prototype.displayDays,ThfCalendarComponent.prototype.displayMonths,ThfCalendarComponent.prototype.displayWeedDays,ThfCalendarComponent.prototype.lastDisplay,ThfCalendarComponent.prototype.elementRef}