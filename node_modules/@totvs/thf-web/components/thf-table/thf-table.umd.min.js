!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/router"),require("@angular/common"),require("@totvs/thf-core/components/thf-button-base")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/router","@angular/common","@totvs/thf-core/components/thf-button-base"],e):e(t["thf-table"]={},t.core,t.router,t.common,t.thfButtonBase)}(this,function(t,e,o,n,c){"use strict";var l=function(){function t(t,o,n){this.viewRef=n,this.actions=[],this.showMoreDisabled=!1,this.showMore=new e.EventEmitter,this.selectAll=!1,this.parentRef=n._view.component,this.myElement=t}return t.prototype.selectAllRows=function(){var t=this;this.selectAll=!this.selectAll,this.items.forEach(function(e){e.$selected=t.selectAll})},t.prototype.selectRow=function(t){t.$selected=!t.$selected,this.selectAll=this.items.filter(function(t){return t.$selected}).length===this.items.length},t.prototype.toggleRowAction=function(t){var e=t.$showAction;this.items.forEach(function(t){t.$showAction&&(t.$showAction=!1)}),t.$showAction=!e},t.prototype.sortColumn=function(t){if(this.sort){var e=this.myElement.nativeElement.querySelector("#sort-"+t.column);e.classList.contains("thf-table-header-icon-unselected")||e.classList.contains("thf-table-header-icon-ascending")?(e.className="thf-table-header-icon-descending",this.sortArray(t,!0)):(e.className="thf-table-header-icon-ascending",this.sortArray(t,!1)),this.clearSortingElement(t)}},t.prototype.clearSortingElement=function(t){for(var e=0;e<this.columns.length;e++){var o=this.columns[e];o.column!==t.column&&(this.myElement.nativeElement.querySelector("#sort-"+o.column).className="thf-table-header-icon-unselected")}},t.prototype.parseDate=function(t){var e;return t.indexOf("-")>=0?(e=t.split("-"),new Date(e[0],e[1]-1,e[2])):t.indexOf("/")>=0?(e=t.split("/"),new Date(e[2],e[1]-1,e[0])):null},t.prototype.sortValidate=function(t,e,o){if(o){if(t<e)return-1;if(t>e)return 1}else{if(t<e)return 1;if(t>e)return-1}return 0},t.prototype.sortArray=function(t,e){var o=this;this.items.sort(function(n,c){if("date"===t.type){var l=o.parseDate(n[t.column]).getTime(),r=o.parseDate(c[t.column]).getTime();return o.sortValidate(l,r,e)}if(e){if(n[t.column]<c[t.column])return-1;if(n[t.column]>c[t.column])return 1}else{if(n[t.column]<c[t.column])return 1;if(n[t.column]>c[t.column])return-1}return 0})},t.prototype.onShowMore=function(){this.showMore.emit(null)},t.decorators=[{type:e.Component,args:[{selector:"thf-table",template:'<table class="thf-table"> <thead> <tr class="thf-table-header"> <th *ngIf="checkbox" class="thf-table-header-ellipsis thf-table-column-checkbox"> <input type="checkbox" class="thf-table-checkbox" [ngClass]="{ \'thf-table-checkbox-checked\': selectAll }"> <label class="thf-table-checkbox-label" (click)="selectAllRows()"></label> </th> <th *ngFor="let column of columns" class="thf-table-header-ellipsis" [style.width]="column.width" [ngClass]="{ \'thf-clickable\': sort, \'thf-table-column-right\': column.type == \'currency\' || column.type == \'number\' }" (click)="sortColumn(column)"> <span id="sort-{{column.column}}" *ngIf="sort"  class=\'thf-table-header-icon-unselected\'></span> <span class="thf-table-header-ellipsis thf-table-header-block">{{ column.label }}</span> </th> <th *ngIf="actions.length > 0" class="thf-table-header-action"></th> </tr> </thead> <tbody> <tr *ngFor="let row of items, let rowIndex = index;" class="thf-table-row"> <td *ngIf="checkbox" class="thf-table-column thf-table-column-checkbox" [ngClass]="{ \'thf-table-row-active\': row.$selected && checkbox }"> <input type="checkbox" class="thf-table-checkbox" [ngClass]="{ \'thf-table-checkbox-checked\': row.$selected }"> <label class="thf-table-checkbox-label" (click)="selectRow(row)"></label> </td> <td *ngFor="let column of columns, let columnIndex = index;" [ngClass]="{ \'thf-table-row-active\': row.$selected && checkbox , \'thf-table-column-right\': column.type == \'currency\' || column.type == \'number\', \'thf-table-main-column\': columnIndex == 0 , \'thf-table-column\': columnIndex > 0 }"> <div [ngSwitch]="column.type"> <span *ngSwitchCase="\'currency\'">{{ row[column.column] | currency:column.format:true:\'1.2-2\' }}</span> <span *ngSwitchCase="\'date\'">{{ row[column.column] | date: (column.format ? column.format : \'dd/MM/yyyy\') }}</span> <span *ngSwitchDefault>{{ row[column.column] }}</span> </div> </td> <td *ngIf="actions.length > 0" class="thf-table-column-actions" [ngClass]="{\'thf-table-row-active\': row.$selected && checkbox }"> <span class="thf-icon thf-icon-more thf-clickable " (click)="toggleRowAction(row)"></span> <div [style.display]="row.$showAction ? \'block\': \'none\'" class="thf-table-actions"> <div *ngFor="let action of actions" class="thf-table-action" (click)="parentRef[action.function](row); toggleRowAction(row)"> {{ action.label }} </div> </div> </td> </tr> </tbody> <tfoot *ngIf="showMore.observers.length > 0"> <tr> <td class="thf-table-footer" [colSpan]="(columns.length) + (actions.length > 0 ? 1 : 0) + ( checkbox ? 1 : 0)"> <thf-button t-label="Carregar mais resultados" t-id="btnShowMoreId" (t-click)="onShowMore()" [t-disabled]="showMoreDisabled"> </thf-button> </td> </tr> </tfoot> </table> '}]}],t.ctorParameters=function(){return[{type:e.ElementRef},{type:e.Renderer},{type:e.ViewContainerRef}]},t.propDecorators={items:[{type:e.Input,args:["t-items"]}],columns:[{type:e.Input,args:["t-columns"]}],checkbox:[{type:e.Input,args:["t-checkbox"]}],actions:[{type:e.Input,args:["t-actions"]}],sort:[{type:e.Input,args:["t-sort"]}],showMoreDisabled:[{type:e.Input,args:["t-show-more-disabled"]}],showMore:[{type:e.Output,args:["t-show-more"]}]},t}(),r=function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])};return function(e,o){t(e,o);function n(){this.constructor=e}e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),s=function(t){r(o,t);function o(){return null!==t&&t.apply(this,arguments)||this}return o.decorators=[{type:e.Component,args:[{selector:"thf-button",template:'<button class="thf-button" type="button" id="{{ id }}" [disabled]="disabled" [ngClass]="{ \'thf-button--primary\' : primary, \'thf-button--sm\' : small }" (click)="onClick()"> <span *ngIf="icon" class="thf-icon {{ icon }}" aria-hidden="true"></span> {{ label }} </button> ',providers:[]}]}],o.ctorParameters=function(){return[]},o}(c.ThfButtonBaseComponent),a=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[n.CommonModule],declarations:[s],exports:[s]}]}],t.ctorParameters=function(){return[]},t}(),i=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[n.CommonModule,o.RouterModule,a],declarations:[l],exports:[l]}]}],t.ctorParameters=function(){return[]},t}();t.ThfTableModule=i,Object.defineProperty(t,"__esModule",{value:!0})});