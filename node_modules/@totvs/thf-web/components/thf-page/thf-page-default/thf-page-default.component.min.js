var __extends=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var e in o)o.hasOwnProperty(e)&&(t[e]=o[e])};return function(o,e){t(o,e);function n(){this.constructor=o}o.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}}();import{Component,ViewContainerRef,Renderer}from"@angular/core";import{Router}from"@angular/router";import{callFunction}from"@totvs/thf-core/utils";import{ThfPageDefaultBaseComponent}from"@totvs/thf-core/components/thf-page-base";var ThfPageDefaultComponent=function(t){__extends(o,t);function o(o,e,n){var i=t.call(this)||this;return i.viewRef=o,i.renderer=e,i.router=n,i.limitPrimaryActions=3,i.maxWidthMobile=480,i.parentRef=o._view.component,i}return o.prototype.ngAfterContentInit=function(){var t=this;this.setIsMobile(),this.setDropdownActions(),this.renderer.listenGlobal("window","resize",function(o){t.onResize(o)})},o.prototype.ngOnChanges=function(t){this.setDropdownActions()},o.prototype.callAction=function(t){t.url?this.router.navigate([t.url]):t.action&&callFunction(t.action,this.parentRef)},o.prototype.onResize=function(t){t.target.innerWidth<this.maxWidthMobile?(this.isMobile=!0,this.limitPrimaryActions=2,this.setDropdownActions()):(this.isMobile=!1,this.limitPrimaryActions=3,this.setDropdownActions())},o.prototype.setIsMobile=function(){window.innerWidth<this.maxWidthMobile&&(this.isMobile=!0,this.limitPrimaryActions=2)},o.prototype.setDropdownActions=function(){this.actions.length>this.limitPrimaryActions&&(this.dropdownActions=this.actions.slice(this.limitPrimaryActions-1))},o.decorators=[{type:Component,args:[{selector:"thf-page-default",template:'<thf-page> \x3c!-- HEADER --\x3e <thf-page-header [t-title]="title"> \x3c!-- OPERATIONS --\x3e <div class="thf-page-default-actions"> <thf-button *ngIf="actions[0]" t-primary="true" [t-label]="actions[0].label" (t-click)="callAction(actions[0])" [t-disabled]="actions[0].disabled" [t-icon]="actions[0].icon"> </thf-button> <thf-button *ngIf="actions[1] && (actions.length === 2 || !isMobile)" [t-label]="actions[1].label" [t-disabled]="actions[1].disabled" (t-click)="callAction(actions[1])" [t-icon]="actions[1].icon"> </thf-button> <thf-button *ngIf="actions.length === 3 && actions[2] && !isMobile" [t-label]="actions[2].label" (t-click)="callAction(actions[2])" [t-disabled]="actions[2].disabled" [t-icon]="actions[2].icon"> </thf-button> <thf-dropdown *ngIf="actions.length > limitPrimaryActions" t-label="Outras ações" [t-actions]="dropdownActions"> </thf-dropdown> </div> </thf-page-header> \x3c!-- CONTENT --\x3e <thf-page-content> <ng-content> </ng-content> </thf-page-content> </thf-page> '}]}],o.ctorParameters=function(){return[{type:ViewContainerRef},{type:Renderer},{type:Router}]},o}(ThfPageDefaultBaseComponent);export{ThfPageDefaultComponent};function ThfPageDefaultComponent_tsickle_Closure_declarations(){ThfPageDefaultComponent.decorators,ThfPageDefaultComponent.ctorParameters,ThfPageDefaultComponent.prototype.limitPrimaryActions,ThfPageDefaultComponent.prototype.dropdownActions,ThfPageDefaultComponent.prototype.isMobile,ThfPageDefaultComponent.prototype.maxWidthMobile,ThfPageDefaultComponent.prototype.parentRef,ThfPageDefaultComponent.prototype.viewRef,ThfPageDefaultComponent.prototype.renderer,ThfPageDefaultComponent.prototype.router}