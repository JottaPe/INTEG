import { HttpInterceptor, HttpHandler, HttpRequest, HttpResponse, HttpEvent, HttpErrorResponse } from '@angular/common/http';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/do';
/**
 * @description
 *
 * O serviço Totvs Http Interceptor realiza o tratamento de requisições Http do padrão do Guia de implementação das APIs
 * TOTVS [http://tdn.totvs.com/pages/releaseview.action?pageId=271660444] para adaptá-lo ao modelo do THF.
 *
 * Ao analisar o objeto totvs_messages retornado pela requisição, o serviço exibirá notificações com mensagens na tela.
 * Os retornos de erro, com códigos 4xx e 5xx são tratados automaticamente sem a necessidade de incluir o totvs_messages.
 *
 * O content-type deve ser ```application/json``` e a estrutura de mensagem recebida pelo serviço é:
 * - totvs_messages: lista de mensagens de erro ou informativo resultante do serviço.
 *    - type: success, warning, error, e information;
 *    - code: título ou código da mensagem;
 *    - detail: detalhamento ou texto da mensagem.
 *
 * Para utilizar o thf-http-interceptor em sua aplicação apenas adicione no módulo:
 *
 * ```
 *  import { HTTP_INTERCEPTORS } from '@angular/common/http';
 *  import { ThfHttpInterceptorService } from '@totvs/thf-web/interceptors/thf-http-interceptor/thf-http-interceptor.service';
 * ```
 *
 * ```
 * @NgModule({
 *  ...
 *  providers: [
 *   {
 *      provide: HTTP_INTERCEPTORS,
 *      useClass: ThfHttpInterceptorService,
 *      multi: true
 *    }
 * ...
 * ```
 * Ao realizar suas requisições, utilize o ```Http Client```, conforme exemplo abaixo:
 *
 * ```
 *  import { HttpClient } from '@angular/common/http';
 *  import { HTTP_INTERCEPTORS } from '@angular/common/http';
 * ```
 *
 * ``` this.http.get('http://localhost:3000/api/users'); ```
 *
 */
export declare abstract class ThfHttpInterceptorBaseService implements HttpInterceptor {
    private notification;
    private dialog;
    notificationTypes: string[];
    constructor(notification: any, dialog: any);
    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
    processResponse(response: HttpResponse<any>): void;
    processErrorResponse(response: HttpErrorResponse): void;
    private showNotification(totvsMessage);
    private showErrorNotification(errorResponse);
    private generateErrorNotificationAction(errorResponse);
    private generateUrlHelpFunction(helpUrl);
    private generateDialogDetailFunction(errorResponse, notificationMessage);
}
