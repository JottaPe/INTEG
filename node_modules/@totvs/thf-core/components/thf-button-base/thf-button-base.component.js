import { Input, Output, EventEmitter } from '@angular/core';
import { convertToBoolean } from './../../utils/index';
/**
 * \@description
 *
 * Para utilização em telas com a necessidade de incluir botões dentro do padrão visual da Totvs.
 */
var ThfButtonBaseComponent = (function () {
    function ThfButtonBaseComponent() {
        /**
         * Recebe uma ação de clique do controller da página.
         */
        this.click = new EventEmitter();
    }
    Object.defineProperty(ThfButtonBaseComponent.prototype, "setPrimary", {
        /**
         * @param {?} primary
         * @return {?}
         */
        set: function (primary) {
            this.primary = primary === '' ? false : convertToBoolean(primary);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfButtonBaseComponent.prototype, "setSmall", {
        /**
         * @param {?} small
         * @return {?}
         */
        set: function (small) {
            this.small = small === '' ? false : convertToBoolean(small);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfButtonBaseComponent.prototype, "setDisabled", {
        /**
         * @param {?} disabled
         * @return {?}
         */
        set: function (disabled) {
            this.disabled = disabled === '' ? false : convertToBoolean(disabled);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ThfButtonBaseComponent.prototype.onClick = function () {
        this.click.emit(null);
    };
    ThfButtonBaseComponent.propDecorators = {
        'id': [{ type: Input, args: ['t-id',] },],
        'label': [{ type: Input, args: ['t-label',] },],
        'icon': [{ type: Input, args: ['t-icon',] },],
        'setPrimary': [{ type: Input, args: ['t-primary',] },],
        'setSmall': [{ type: Input, args: ['t-small',] },],
        'setDisabled': [{ type: Input, args: ['t-disabled',] },],
        'click': [{ type: Output, args: ['t-click',] },],
    };
    return ThfButtonBaseComponent;
}());
export { ThfButtonBaseComponent };
function ThfButtonBaseComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    ThfButtonBaseComponent.propDecorators;
    /**
     * Adiciona uma ID no botão
     * @type {?}
     */
    ThfButtonBaseComponent.prototype.id;
    /**
     * Adiciona a label no botão
     * @type {?}
     */
    ThfButtonBaseComponent.prototype.label;
    /**
     * Especifica o ícone a ser utilizado no botão
     * @type {?}
     */
    ThfButtonBaseComponent.prototype.icon;
    /**
     * Define o botão com padão de cor "primary" (principal) ao passar o valor "true", do contrário vai utilizar as cores "default"
     * @type {?}
     */
    ThfButtonBaseComponent.prototype.primary;
    /**
     * Define o botão como pequeno ao passar o valor "true", o valor default é false.
     * @type {?}
     */
    ThfButtonBaseComponent.prototype.small;
    /**
     * Desabilita o botão na página.
     * @type {?}
     */
    ThfButtonBaseComponent.prototype.disabled;
    /**
     * Recebe uma ação de clique do controller da página.
     * @type {?}
     */
    ThfButtonBaseComponent.prototype.click;
}
