(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :
	(factory((global['thf-chart-base'] = {}),global.core));
}(this, (function (exports,core) { 'use strict';

/**
 * \@description
 *
 * O componente de gráfico thf-chart deve ser utilizado para renderizar visualizações de dados de alta qualidade.
 *
 */
var ThfChartBaseComponent = (function () {
    function ThfChartBaseComponent() {
        /**
         * Altura do gráfico em pixels, por padrão é definido 400px.
         */
        this.height = '400px';
        /**
         * Evento que será disparado ao clicar nas séries.
         */
        this.seriesClick = new core.EventEmitter();
        /**
         * Evento que será disparado ao posicionar o mouse sobre a série.
         */
        this.seriesHover = new core.EventEmitter();
    }
    Object.defineProperty(ThfChartBaseComponent.prototype, "setHeight", {
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            var /** @type {?} */ number = this.getValueAsNumber(value);
            this.height = number && number > 0 ? number + "px" : '400px';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfChartBaseComponent.prototype, "setMaxValue", {
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this.maxValue = this.getValueAsNumber(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfChartBaseComponent.prototype, "setMinValue", {
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this.minValue = this.getValueAsNumber(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    ThfChartBaseComponent.prototype.onSeriesClick = function (event) {
        this.seriesClick.emit(event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ThfChartBaseComponent.prototype.onSeriesHover = function (event) {
        this.seriesHover.emit(event);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    ThfChartBaseComponent.prototype.getValueAsNumber = function (value) {
        var /** @type {?} */ number = (typeof value === 'string') ? parseInt(value, null) : value;
        return (number || number === 0) ? number : undefined;
    };
    ThfChartBaseComponent.propDecorators = {
        'title': [{ type: core.Input, args: ['t-title',] },],
        'series': [{ type: core.Input, args: ['t-series',] },],
        'categories': [{ type: core.Input, args: ['t-categories',] },],
        'typeChart': [{ type: core.Input, args: ['t-type',] },],
        'labelVisible': [{ type: core.Input, args: ['t-label-visible',] },],
        'setHeight': [{ type: core.Input, args: ['t-height',] },],
        'setMaxValue': [{ type: core.Input, args: ['t-max-value',] },],
        'setMinValue': [{ type: core.Input, args: ['t-min-value',] },],
        'seriesClick': [{ type: core.Output, args: ['t-series-click',] },],
        'seriesHover': [{ type: core.Output, args: ['t-series-hover',] },],
    };
    return ThfChartBaseComponent;
}());

// Array de cores para gráficos definido pela equipe de UX Totvs.
var ThfChartColors = [
    ['#00CBE4'],
    ['#00CBE4', '#32285C'],
    ['#00CBE4', '#277099', '#32285C'],
    ['#00CBE4', '#018DB0', '#325783', '#32285C'],
    ['#00CBE4', '#009CBD', '#286F9B', '#354B7A', '#32285C'],
    ['#00CBE4', '#00A5C5', '#0082A8', '#31628D', '#364473', '#32285C'],
    ['#00CBE4', '#00AACB', '#018DAE', '#277099', '#325783', '#35426E', '#32285D'],
    ['#00CBE4', '#00AFCE', '#0194B6', '#117FA2', '#0088AC', '#23789F', '#2B6992', '#32285C'],
    ['#00CBE4', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#32285C'],
    ['#00CBE4', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#364E7C', '#32285C'],
    ['#00CBE4', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#364E7C', '#36436F', '#32285C'],
    ['#00CBE4', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#364E7C', '#36436F', '#333565', '#32285C'],
];

exports.ThfChartBaseComponent = ThfChartBaseComponent;
exports.ThfChartColors = ThfChartColors;

Object.defineProperty(exports, '__esModule', { value: true });

})));
