import { EventEmitter } from '@angular/core';
import { ThfAreaChartSeries, ThfBarChartSeries, ThfBubbleChartSeries, ThfBulletChartSeries, ThfCandlestickChartSeries, ThfColumnChartSeries, ThfDonutChartSeries, ThfFunnelChartSeries, ThfLineChartSeries, ThfOhlcChartSeries, ThfPieChartSeries, ThfPolarChartSeries, ThfRangeChartSeries, ThfScatterChartSeries, ThfWaterfallChartSeries } from './thf-chart-series.interface';
/**
 * @description
 *
 * O componente de gráfico thf-chart deve ser utilizado para renderizar visualizações de dados de alta qualidade.
 *
 */
export declare class ThfChartBaseComponent {
    /** Título do gráfico. */
    title?: string;
    /** Séries do gráfico, deve ser informado de acordo com o tipo de gráfico. */
    series: Array<ThfAreaChartSeries | ThfBarChartSeries | ThfBubbleChartSeries | ThfBulletChartSeries | ThfCandlestickChartSeries | ThfColumnChartSeries | ThfDonutChartSeries | ThfFunnelChartSeries | ThfLineChartSeries | ThfOhlcChartSeries | ThfPieChartSeries | ThfPolarChartSeries | ThfRangeChartSeries | ThfScatterChartSeries | ThfWaterfallChartSeries>;
    /**
     * Os nomes das categorias. O gráfico criará uma categoria para cada array de dados, exceto quando for pie, donut e funnel.
     */
    categories?: Array<string>;
    /**
     * Tipo do gráfico, pode ser informado os seguintes tipos:
     * area, bar, bubble, bullet, candlestick, column, donut, funnel, line, ohlc, pie, polarLine, rangeBar, scatter, scatterLine e waterfall.
     */
    typeChart?: string;
    /** Define se as labels das séries devem ser exibidas. O valor padrão é false. */
    labelVisible?: boolean;
    /** Altura do gráfico em pixels, por padrão é definido 400px. */
    height?: string;
    setHeight: number;
    /** Valor máximo a ser apresentado no eixo y do gráfico. */
    maxValue?: number;
    setMaxValue: number;
    /** Valor mínimo a ser apresentado no eixo y do gráfico. */
    minValue?: number;
    setMinValue: number;
    /** Evento que será disparado ao clicar nas séries. */
    seriesClick?: EventEmitter<any>;
    /** Evento que será disparado ao posicionar o mouse sobre a série. */
    seriesHover?: EventEmitter<any>;
    onSeriesClick(event: any): void;
    onSeriesHover(event: any): void;
    private getValueAsNumber(value);
}
