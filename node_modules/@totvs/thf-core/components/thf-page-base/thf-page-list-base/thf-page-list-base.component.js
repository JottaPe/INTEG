var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Input } from '@angular/core';
import { ThfPageDefaultBaseComponent } from './../thf-page-default-base/thf-page-default-base.component';
/**
 * \@description
 *
 * O componente **thf-page-list** é utilizado como o container principal para as telas de listagem de dados,
 * podendo ser apresentado como lista ou tabela.
 * É possível também filtrar o conteúdo da lista e adicionar ações para a mesma.
 */
var ThfPageListBaseComponent = (function (_super) {
    __extends(ThfPageListBaseComponent, _super);
    function ThfPageListBaseComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ThfPageListBaseComponent.propDecorators = {
        'filter': [{ type: Input, args: ['t-filter',] },],
    };
    return ThfPageListBaseComponent;
}(ThfPageDefaultBaseComponent));
export { ThfPageListBaseComponent };
function ThfPageListBaseComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    ThfPageListBaseComponent.propDecorators;
    /**
     * Nesta propriedade deve ser definido um objeto que implementa a interface ThfPageFilter.
     * @type {?}
     */
    ThfPageListBaseComponent.prototype.filter;
}
