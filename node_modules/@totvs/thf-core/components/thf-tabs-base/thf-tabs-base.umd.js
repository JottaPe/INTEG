(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :
	(factory((global['thf-tabs-base'] = {}),global.core));
}(this, (function (exports,core) { 'use strict';

/**
 * @param {?} val
 * @return {?}
 */
function convertToBoolean(val) {
    if (typeof val === 'string') {
        val = val.toLowerCase().trim();
        return (val === 'true' || val === 'on' || val === '');
    }
    return !!val;
}
/**
 * @param {?} object
 * @param {?} type
 * @return {?}
 */

/**
 *
 * @param {?} fn Função que será executada dentro do contexto. Podendo ser o nome da função
 * ou a referência da mesma.
 *
 * @param {?} context Contexto do qual a função será executada.
 * @return {?}
 */

/**
 * @param {?} value
 * @param {?} start
 * @param {?} end
 * @return {?}
 */

/**
 * @param {?} value
 * @param {?} time
 * @return {?}
 */

/**
 * @return {?}
 */

/**
 * @return {?}
 */

/**
 * @param {?} value
 * @return {?}
 */

/**
 * \@description
 *
 * Cada thf-tab gera uma aba com o conteúdo HTML inserido dentro dele.
 */
var ThfTabBaseComponent = (function () {
    function ThfTabBaseComponent() {
        /**
         * Para a aba parecer ativa e mostrar o conteúdo quando iniciar
         */
        this.active = false;
        /**
         * Esconder a aba
         */
        this.hide = false;
        /**
         * Desabilitar a aba
         */
        this.disabled = false;
        /**
         * ID da aba
         */
        this.id = String(Math.random());
        /**
         * Método disparado ao clicar na aba
         */
        this.click = new core.EventEmitter;
    }
    Object.defineProperty(ThfTabBaseComponent.prototype, "setActive", {
        /**
         * @param {?} active
         * @return {?}
         */
        set: function (active) {
            (active === '') ? this.active = true : this.active = convertToBoolean(active);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfTabBaseComponent.prototype, "setHide", {
        /**
         * @param {?} hide
         * @return {?}
         */
        set: function (hide) {
            (hide === '') ? this.hide = true : this.hide = convertToBoolean(hide);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfTabBaseComponent.prototype, "setDisabled", {
        /**
         * @param {?} disabled
         * @return {?}
         */
        set: function (disabled) {
            (disabled === '') ? this.disabled = true : this.disabled = convertToBoolean(disabled);
        },
        enumerable: true,
        configurable: true
    });
    ThfTabBaseComponent.propDecorators = {
        'label': [{ type: core.Input, args: ['t-label',] },],
        'setActive': [{ type: core.Input, args: ['t-active',] },],
        'setHide': [{ type: core.Input, args: ['t-hide',] },],
        'setDisabled': [{ type: core.Input, args: ['t-disabled',] },],
        'id': [{ type: core.Input, args: ['t-id',] },],
        'click': [{ type: core.Output, args: ['t-click',] },],
    };
    return ThfTabBaseComponent;
}());

/**
 * \@description
 *
 * O thf-tabs é o componente de abas que facilita a organização de conteúdos
 */
var ThfTabsBaseComponent = (function () {
    function ThfTabsBaseComponent() {
        /**
         * Usado para indicar se a aba será pequena
         */
        this.small = false;
    }
    Object.defineProperty(ThfTabsBaseComponent.prototype, "setSmall", {
        /**
         * @param {?} small
         * @return {?}
         */
        set: function (small) {
            (small === '') ? this.small = true : this.small = convertToBoolean(small);
        },
        enumerable: true,
        configurable: true
    });
    ThfTabsBaseComponent.propDecorators = {
        'setSmall': [{ type: core.Input, args: ['t-small',] },],
    };
    return ThfTabsBaseComponent;
}());

exports.ThfTabBaseComponent = ThfTabBaseComponent;
exports.ThfTabsBaseComponent = ThfTabsBaseComponent;

Object.defineProperty(exports, '__esModule', { value: true });

})));
