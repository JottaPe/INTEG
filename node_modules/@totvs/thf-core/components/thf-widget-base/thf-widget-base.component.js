import { Input, Output, EventEmitter } from '@angular/core';
/**
 * \@description
 * O componente thf-widget é recomendado para dashboards e pode ser utilizado
 * para incluir vários tipos de conteúdo como: gráficos, tabelas, grids e imagens.
 * Além da exibição de conteúdo, o thf-widget possibilita adicionar ações e um link
 * para ajuda.
 */
var ThfWidgetBaseComponent = (function () {
    function ThfWidgetBaseComponent() {
        /**
         * Função que será chamada na primeira ação
         */
        this.primaryAction = new EventEmitter();
        /**
         * Função que será chamada na segunda ação
         */
        this.secundaryAction = new EventEmitter();
        /**
         * Largura do thf-widget. Opções: sm, md, lg, xl. Padrão: xl
         */
        this.size = 'xl';
    }
    Object.defineProperty(ThfWidgetBaseComponent.prototype, "setSize", {
        /**
         * @param {?} size
         * @return {?}
         */
        set: function (size) {
            var /** @type {?} */ sizes = ['sm', 'md', 'lg', 'xl'];
            this.size = (sizes.indexOf(size) > -1) ? size : 'xl';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThfWidgetBaseComponent.prototype, "setHeight", {
        /**
         * @param {?} value
         * @return {?}
         */
        set: function (value) {
            this.height = parseInt(value, 10);
        },
        enumerable: true,
        configurable: true
    });
    ThfWidgetBaseComponent.propDecorators = {
        'title': [{ type: Input, args: ['t-title',] },],
        'help': [{ type: Input, args: ['t-help',] },],
        'primaryAction': [{ type: Output, args: ['t-primary-action',] },],
        'primaryLabel': [{ type: Input, args: ['t-primary-label',] },],
        'secundaryAction': [{ type: Output, args: ['t-secundary-action',] },],
        'secundaryLabel': [{ type: Input, args: ['t-secundary-label',] },],
        'background': [{ type: Input, args: ['t-background',] },],
        'setSize': [{ type: Input, args: ['t-size',] },],
        'setHeight': [{ type: Input, args: ['t-height',] },],
    };
    return ThfWidgetBaseComponent;
}());
export { ThfWidgetBaseComponent };
function ThfWidgetBaseComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    ThfWidgetBaseComponent.propDecorators;
    /**
     * Título do thf-widget
     * @type {?}
     */
    ThfWidgetBaseComponent.prototype.title;
    /**
     * Link de ajuda
     * @type {?}
     */
    ThfWidgetBaseComponent.prototype.help;
    /**
     * Função que será chamada na primeira ação
     * @type {?}
     */
    ThfWidgetBaseComponent.prototype.primaryAction;
    /**
     * Descrição da primeira ação
     * @type {?}
     */
    ThfWidgetBaseComponent.prototype.primaryLabel;
    /**
     * Função que será chamada na segunda ação
     * @type {?}
     */
    ThfWidgetBaseComponent.prototype.secundaryAction;
    /**
     * Descrição da segunda ação
     * @type {?}
     */
    ThfWidgetBaseComponent.prototype.secundaryLabel;
    /**
     * Imagem de background do thf-widget
     * @type {?}
     */
    ThfWidgetBaseComponent.prototype.background;
    /**
     * Largura do thf-widget. Opções: sm, md, lg, xl. Padrão: xl
     * @type {?}
     */
    ThfWidgetBaseComponent.prototype.size;
    /**
     * Altura do thf-widget.
     * Caso não seja definida, se ajustará automaticamente ao conteúdo
     * @type {?}
     */
    ThfWidgetBaseComponent.prototype.height;
}
