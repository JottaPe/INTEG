/**
 * \@description
 *
 * O pipe thf-i18n é responsável por tratar literais parâmetrizadas, dando mais flexibilidade as literais de tradução.
 * O número de parâmetros inseridos nas literais deve coincidir com a quantia de parâmetros passados por parâmetro,
 * os parâmetros serão substituidos de acordo com a ordem informada.
 *
 * Para inserir um parâmetro em uma literal, o mesmo deverá ser inserido entre chaves dentro da literal e posicionado
 * de acordo como deve ser exibido após a sua transformação.
 *
 * ```
 * const i18nPT = {
 *   pagination: 'Página {1} de {2} páginas.',
 *   totalPages: 'Total de {totalPages} encontradas.'
 * };
 * ```
 *
 * É possível passar um valor ou um array de valores para o pipe, caso seja passado um array, os valores devem obedecer a ordem
 * informada na literal.
 *
 * ```
 * {{ i18nPT.pagination | thfI18n:[1,10] }}
 * {{ i18nPT.totalPages | thfI18n:10 }}
 * ```
 */
var ThfI18nBasePipe = (function () {
    function ThfI18nBasePipe() {
    }
    /**
     * @param {?} value
     * @param {?} args
     * @return {?}
     */
    ThfI18nBasePipe.prototype.transform = function (value, args) {
        if (!value) {
            return '';
        }
        if (!(args instanceof Array)) {
            args = [args];
        }
        for (var _i = 0, args_1 = args; _i < args_1.length; _i++) {
            var arg = args_1[_i];
            value = value.replace(/(\{\w*\})+/, arg);
        }
        return value;
    };
    return ThfI18nBasePipe;
}());
export { ThfI18nBasePipe };
